/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type ActiveThreshold =
  | {
      absolute_count: {
        count: Uint128
      }
    }
  | {
      percentage: {
        percent: Decimal
      }
    }
export type Uint128 = string
export type Decimal = string
export type Snip20TokenInfo =
  | {
      existing: {
        address: string
        code_hash: string
        staking_contract: StakingInfo
      }
    }
  | {
      new: {
        code_hash: string
        code_id: number
        decimals: number
        initial_balances: InitialBalance[]
        initial_dao_balance?: Uint128 | null
        name: string
        staking_code_hash: string
        staking_code_id: number
        symbol: string
        unstaking_duration?: Duration | null
      }
    }
export type StakingInfo =
  | {
      existing: {
        staking_contract_address: string
        staking_contract_code_hash: string
      }
    }
  | {
      new: {
        label: string
        staking_code_hash: string
        staking_code_id: number
        unstaking_duration?: Duration | null
      }
    }
export type Duration =
  | {
      height: number
    }
  | {
      time: number
    }
export interface InstantiateMsg {
  active_threshold?: ActiveThreshold | null
  dao_code_hash: string
  query_auth?: RawContract | null
  token_info: Snip20TokenInfo
}
export interface RawContract {
  address: string
  code_hash: string
}
export interface InitialBalance {
  address: string
  amount: Uint128
}
export type ExecuteMsg = {
  UpdateActiveThreshold: {
    new_threshold?: ActiveThreshold | null
  }
}
export type QueryMsg =
  | {
      staking_contract: {}
    }
  | {
      active_threshold: {}
    }
  | {
      voting_power_at_height: {
        auth: Auth
        height?: number | null
      }
    }
  | {
      total_power_at_height: {
        height?: number | null
      }
    }
  | {
      dao: {}
    }
  | {
      info: {}
    }
  | {
      token_contract: {}
    }
  | {
      is_active: {}
    }
export type Auth =
  | {
      viewing_key: {
        address: string
        key: string
      }
    }
  | {
      permit: PermitForPermitData
    }
export type Binary = string
export interface PermitForPermitData {
  account_number?: Uint128 | null
  chain_id?: string | null
  memo?: string | null
  params: PermitData
  sequence?: Uint128 | null
  signature: PermitSignature
}
export interface PermitData {
  data: Binary
  key: string
}
export interface PermitSignature {
  pub_key: PubKey
  signature: Binary
}
export interface PubKey {
  type: string
  value: Binary
}
export interface MigrateMsg {}
export interface ActiveThresholdResponse {
  active_threshold?: ActiveThreshold | null
}
export type Addr = string
export interface AnyContractInfo {
  addr: Addr
  code_hash: string
}
export interface InfoResponse {
  info: ContractVersion
}
export interface ContractVersion {
  contract: string
  version: string
}
export type Boolean = boolean
export interface TotalPowerAtHeightResponse {
  height: number
  power: Uint128
}
export interface VotingPowerAtHeightResponse {
  height: number
  power: Uint128
}
