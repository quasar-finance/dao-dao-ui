/**
 * This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {
  pre_propose_approval_contract: string
}
export type ExecuteMsg =
  | {
      propose: {
        msg: ApproverProposeMessage
      }
    }
  | {
      update_config: {
        deposit_info?: UncheckedDepositInfo | null
        /**
         * < v2.5.0
         */
        open_proposal_submission?: boolean
        /**
         * >= v2.5.0
         */
        submission_policy?: PreProposeSubmissionPolicy | null
      }
    }
  | {
      update_submission_policy: {
        allowlist_add?: string[] | null
        allowlist_remove?: string[] | null
        denylist_add?: string[] | null
        denylist_remove?: string[] | null
        set_dao_members?: boolean | null
      }
    }
  | {
      withdraw: {
        denom?: UncheckedDenom | null
      }
    }
  | {
      extension: {
        msg: ExecuteExt
      }
    }
  | {
      add_proposal_submitted_hook: {
        address: string
      }
    }
  | {
      remove_proposal_submitted_hook: {
        address: string
      }
    }
  | {
      proposal_completed_hook: {
        new_status: Status
        proposal_id: number
      }
    }
export type ApproverProposeMessage = {
  propose: {
    approval_id: number
    description: string
    title: string
  }
}
export type Uint128 = string
export type DepositToken =
  | {
      token: {
        denom: UncheckedDenom
      }
    }
  | {
      voting_module_token: {
        token_type: VotingModuleTokenType
      }
    }
export type UncheckedDenom =
  | {
      native: string
    }
  | {
      cw20: string
    }
export type VotingModuleTokenType = 'native' | 'cw20'
export type DepositRefundPolicy = 'always' | 'only_passed' | 'never'
export type PreProposeSubmissionPolicy =
  | {
      anyone: {
        denylist: string[]
      }
    }
  | {
      specific: {
        allowlist: string[]
        dao_members: boolean
        denylist: string[]
      }
    }
export type ExecuteExt = {
  reset_approver: {}
}
export type Status =
  | 'open'
  | 'rejected'
  | 'passed'
  | 'executed'
  | 'closed'
  | 'execution_failed'
  | {
      veto_timelock: {
        expiration: Expiration
      }
    }
  | 'vetoed'
export type Expiration =
  | {
      at_height: number
    }
  | {
      at_time: Timestamp
    }
  | {
      never: {}
    }
export type Timestamp = Uint64
export type Uint64 = string
export interface UncheckedDepositInfo {
  amount: Uint128
  denom: DepositToken
  refund_policy: DepositRefundPolicy
}
export type QueryMsg =
  | {
      proposal_module: {}
    }
  | {
      dao: {}
    }
  | {
      config: {}
    }
  | {
      deposit_info: {
        proposal_id: number
      }
    }
  | {
      can_propose: {
        address: string
      }
    }
  | {
      proposal_submitted_hooks: {}
    }
  | {
      query_extension: {
        msg: QueryExt
      }
    }
export type QueryExt =
  | {
      pre_propose_approval_contract: {}
    }
  | {
      pre_propose_approval_id_for_approver_proposal_id: {
        id: number
      }
    }
  | {
      approver_proposal_id_for_pre_propose_approval_id: {
        id: number
      }
    }
export type Boolean = boolean
export type CheckedDenom =
  | {
      native: string
    }
  | {
      cw20: Addr
    }
export type Addr = string
export interface Config {
  deposit_info?: CheckedDepositInfo | null
  /**
   * < v2.5.0
   */
  open_proposal_submission?: boolean
  /**
   * >= v2.5.0
   */
  submission_policy?: PreProposeSubmissionPolicy
}
export interface CheckedDepositInfo {
  amount: Uint128
  denom: CheckedDenom
  refund_policy: DepositRefundPolicy
}
export interface DepositInfoResponse {
  deposit_info?: CheckedDepositInfo | null
  proposer: Addr
}
export interface HooksResponse {
  hooks: string[]
}
export type Binary = string
