{
  "accountTypeLabel": {
    "ica": "ICA",
    "native": "Native",
    "polytone": "Cross-chain",
    "valence": "Rebalancer"
  },
  "actionCategory": {
    "advancedDescription": "Execute custom actions and bulk import actions.",
    "advancedLabel": "Advanced",
    "appearanceDescription": "Customize the appearance of this DAO's page.",
    "appearanceLabel": "Appearance",
    "authorizationsDescription": "Grant, revoke, and perform authorizations.",
    "authorizationsLabel": "Authorizations",
    "chainGovernanceDescription": "Participate in the blockchain's governance.",
    "chainGovernanceLabel": "Blockchain Governance",
    "commonlyUsedDescription": "Commonly used actions.",
    "commonlyUsedLabel": "Commonly Used",
    "daoGovernanceDescription_dao": "Configure how this DAO governs itself (for example: how voting works).",
    "daoGovernanceDescription_gov": "Manage the governance of DAOs.",
    "daoGovernanceDescription_wallet": "Manage the governance of DAOs.",
    "daoGovernanceLabel": "DAO Governance",
    "nftsDescription_dao": "Mint, transfer, burn, and display NFTs in this DAO's treasury.",
    "nftsDescription_gov": "Mint, transfer, and burn NFTs.",
    "nftsDescription_wallet": "Mint, transfer, and burn NFTs.",
    "nftsLabel": "NFTs",
    "pressDescription": "Publish, update, and remove posts.",
    "pressLabel": "Press",
    "rebalancerDescription_dao": "Manage the automatic rebalancing of this DAO's treasury.",
    "rebalancerDescription_gov": "Manage the automatic rebalancing of this DAO's treasury.",
    "rebalancerDescription_wallet": "Manage the automatic rebalancing of your tokens.",
    "rebalancerLabel": "Rebalancer",
    "smartContractingDescription": "Create, execute, and manage smart contracts.",
    "smartContractingLabel": "Smart Contracting",
    "subDaosDescription": "Manage SubDAOs or become a SubDAO.",
    "subDaosLabel": "SubDAOs",
    "treasuryDescription_dao": "Manage this DAO's treasury (for example, send payments, stake or swap tokens, etc.).",
    "treasuryDescription_gov": "Manage the community pool (for example, send payments, stake or swap tokens, etc.).",
    "treasuryDescription_wallet": "Manage your tokens (for example, send payments, stake or swap tokens, etc.).",
    "treasuryLabel_dao": "Treasury",
    "treasuryLabel_gov": "Community Pool",
    "treasuryLabel_wallet": "Wallet"
  },
  "button": {
    "acceptTerms": "I accept the terms",
    "accountCreationActionAdded": "Account creation action added",
    "add": "Add",
    "addADescriptionOptional": "Add a description (optional)",
    "addAccountCreationAction": "Add account creation action",
    "addAccountCreationActions": "Add account creation actions",
    "addAction": "Add action",
    "addAllowance": "Add allowance",
    "addAnotherAction": "Add another {{action}} action",
    "addAttribute": "Add attribute",
    "addChains": "Add chains",
    "addCollection": "Add collection",
    "addFile": "Add file",
    "addImage": "Add image",
    "addMember": "Add a member",
    "addMembers": "Add members",
    "addNewOption": "Add a new option",
    "addPayment": "Add payment",
    "addRegisterAction": "Add register action",
    "addStep": "Add step",
    "addTier": "Add a tier",
    "addToKeplr": "Add token to Keplr",
    "addToProfile": "Add to profile",
    "addToken": "Add token",
    "addUpdateWidget": "Add/update widget",
    "addVestingManagerSetupAction": "Add vesting manager setup action",
    "addVetoer": "Add vetoer",
    "addedRegisterAction": "Added register action",
    "apolloSafe": "Apollo Safe",
    "approve": "Approve",
    "back": "Back",
    "begin": "Begin",
    "beginRating": "Begin rating",
    "burn": "Burn",
    "cancel": "Cancel",
    "castYourVote": "Cast your vote",
    "change": "Change",
    "changeProposal": "Change proposal",
    "changeVetoer": "Change vetoer",
    "changeVote": "Change vote",
    "changeYourVote": "Change your vote",
    "chooseDao": "Choose DAO",
    "chooseImage": "Choose image",
    "chooseProposal": "Choose proposal",
    "chooseSubDao": "Choose SubDAO",
    "claim": "Claim",
    "claimNumTokens": "Claim your {{amount}} ${{tokenSymbol}}",
    "claimStakingRewards": "Claim staking rewards",
    "claimYourTokens": "Claim your tokens",
    "clear": "Clear",
    "clearAll": "Clear all",
    "clearNotification": "Clear notification",
    "clearSelected": "Clear {{count}} selected",
    "clickHereToProposeAdding": "Click here to propose adding it.",
    "clickHereToProposeRecognizingIt": "Click here to propose recognizing it.",
    "clickHereToProposeSettingAdminToParent": "Click here to propose setting the admin to {{parent}}.",
    "clickToCopyAddress": "Click to copy address",
    "clickToFollow": "Click to follow",
    "clickToUnfollow": "Click to unfollow",
    "clickToView": "Click to view",
    "close": "Close",
    "complete": "Complete",
    "connect": "Connect",
    "connectToChain": "Connect to {{chainName}}",
    "continue": "Continue",
    "continueEditing": "Continue editing",
    "copy": "Copy",
    "copyAddress": "Copy address",
    "copyAddressToClipboard": "Copy address to clipboard",
    "copyChainAddress": "Copy {{chain}} address",
    "copyDaoAddress": "Copy DAO address",
    "copyIdToClipboard": "Copy ID to clipboard",
    "copyLinkToProposalDraft": "Copy link to proposal draft",
    "copyToClipboard": "Copy to clipboard",
    "create": "Create",
    "createAProposal": "Create a proposal",
    "createAToken": "Create a token",
    "createAccount": "Create account",
    "createCrossChainAccount": "Create cross-chain account",
    "createDAO": "Create DAO",
    "createNftCollection": "Create NFT collection",
    "createPermit": "Create permit",
    "createSubDao": "Create SubDAO",
    "cryptographicMultisig": "Cryptographic Multisig",
    "cw3Multisig": "CW3 Multisig",
    "delete": "Delete",
    "deleteDraft": "Delete draft",
    "deposit": "Deposit",
    "depositFiat": "Deposit fiat",
    "deselectAllNfts": "Deselect all {{count}} NFTs",
    "disable": "Disable",
    "done": "Done",
    "downloadMembersCsv": "Download member data (.csv)",
    "downloadResultsCsv": "Download results (.csv)",
    "downloadVotesCsv": "Download voting data (.csv)",
    "duplicate": "Duplicate",
    "earlyExecute": "Early execute",
    "enable": "Enable",
    "execute": "Execute",
    "findAnotherChain": "Find another chain",
    "findAnotherDao": "Find another DAO",
    "follow": "Follow",
    "forceExecute": "Force execute",
    "forcePublish": "Force publish",
    "fund": "Fund",
    "fundAndExecute": "Fund and execute",
    "fundAndRelay": "Fund and relay",
    "go": "Go",
    "goBack": "Go back",
    "goToDaoPage": "Go to DAO page",
    "goToOverruleProposal": "Go to overrule proposal",
    "goToProposal": "Go to proposal",
    "gotIt": "Got it",
    "hide": "Hide",
    "hidePreview": "Hide preview",
    "hideQrCode": "Hide QR code",
    "hideRawData": "Hide raw data",
    "ignore": "Ignore",
    "import": "Import",
    "installKeplr": "Install Keplr",
    "instantiate": "Instantiate",
    "keepNotification": "Keep notification",
    "leaveDao": "Leave DAO",
    "loadDraft": "Load draft",
    "loadMessageTemplate": "Load message template",
    "loadMore": "Load more",
    "loadSaves": "Load saves",
    "logIn": "Log in",
    "logOut": "Log out",
    "manage": "Manage",
    "manageStake": "Manage your ${{tokenSymbol}} stake",
    "manageStaking": "Manage staking",
    "manageYourStake": "Manage your stake",
    "mergeProfiles": "Merge profiles",
    "metadataUploaded": "Metadata uploaded",
    "migrate": "Migrate",
    "more": "More",
    "new": "New",
    "newCompensationCycle": "New Compensation Cycle",
    "newPost": "New post",
    "newProposal": "New proposal",
    "newSubDao": "New SubDAO",
    "newVestingPayment": "New vesting payment",
    "nominate": "Nominate",
    "none": "None",
    "notifications": "Notifications",
    "numNotifications_one": "{{count}} notification",
    "numNotifications_other": "{{count}} notifications",
    "numNotifications_zero": "Notifications",
    "openInChainExplorer": "Open in chain explorer",
    "openInDestination": "Open in {{destination}}",
    "openProposal": "Open proposal",
    "openSidebarToVote": "Open sidebar to vote",
    "pause": "Pause",
    "prepareUpdate": "Prepare update",
    "preview": "Preview",
    "propose": "Propose",
    "proposeUpgrade": "Propose upgrade",
    "publish": "Publish",
    "publishAnywayWithCountdown": "Publish anyway? ({{secondsRemaining}})",
    "publishProposal": "Publish proposal",
    "rateContributions": "Rate contributions",
    "readLess": "Read less",
    "readMore": "Read more",
    "refresh": "Refresh",
    "refundAndCancel": "Refund and cancel",
    "register": "Register",
    "registerSlashes": "Register slashes",
    "registerToVote": "Register to vote",
    "registered": "Registered",
    "reject": "Reject",
    "relay": "Relay",
    "remove": "Remove",
    "removeWidget": "Remove widget",
    "resetQuestion": "Reset?",
    "retry": "Retry",
    "returnHome": "Return home",
    "review": "Review",
    "reviewResultsAndPropose": "Review results and propose",
    "save": "Save",
    "saveDraft": "Save draft",
    "searchDaos": "Search DAOs",
    "selectAccount": "Select account",
    "selectAllNfts": "Select all {{count}} NFTs",
    "selectChain": "Select chain",
    "selectNft": "Select NFT",
    "selectToken": "Select token",
    "selectValidator": "Select validator",
    "selectWidget": "Select widget",
    "setAsProfilePhoto": "Set as profile photo",
    "setDisplayName": "set display name",
    "setUpDiscordNotifier": "Set up Discord Notifier",
    "setUpRebalancer": "Set up rebalancer",
    "settings": "Settings",
    "showInstantiateMessage": "Show Instantiate Message",
    "showQrCode": "Show QR code",
    "showRawData": "Show raw data",
    "simulate": "Simulate",
    "spend": "Spend",
    "stake": "Stake",
    "stakeAllButProposalDeposit": "Stake all but the {{proposalDeposit}} ${{tokenSymbol}} proposal deposit",
    "stakeOrUnstake": "Stake or unstake",
    "stakeTokenSymbol": "Stake ${{tokenSymbol}}",
    "stakeTokens": "Stake tokens",
    "stakingMode": {
      "claim": "Claim",
      "restake": "Restake",
      "stake": "Stake",
      "unstake": "Unstake"
    },
    "stopConnecting": "Stop connecting",
    "stopFollowing": "Stop following",
    "submit": "Submit",
    "switchAction": "Switch action",
    "switchChain": "Switch chain",
    "toggleFullScreen": "Toggle full screen",
    "toggleTheme": "Toggle theme",
    "topUp": "Top up",
    "transfer": "Transfer",
    "unfollow": "Unfollow",
    "unhide": "Unhide",
    "unpause": "Unpause",
    "unregister": "Unregister",
    "unsetProfilePhoto": "Unset profile photo",
    "unsubscribeAll": "Unsubscribe all",
    "update": "Update",
    "upload": "Upload",
    "uploadImage": "Upload image",
    "uploadMetadata": "Upload metadata",
    "useExistingToken": "Use an existing token",
    "verify": "Verify",
    "vestingManagerSetupActionAdded": "Vesting manager setup action added",
    "veto": "Veto",
    "viewDaosPage": "View DAO's page",
    "viewOnDaoDao": "View on DAO DAO",
    "viewProposals": "View proposals",
    "viewResults": "View results",
    "withDecodedModuleMessages": "with Decoded Module Messages",
    "withdrawAvailableBalance": "Withdraw available balance",
    "withdrawFiat": "Withdraw fiat",
    "yourProfile": "Your profile"
  },
  "daoCreator": {
    "MembershipBased": {
      "description": "Small organization with a few members who are likely to stick around. Members can be added and removed by a vote of existing members.",
      "membership": "By invitation",
      "name": "Membership DAO (Multisig)",
      "supplies": "None"
    },
    "NftBased": {
      "description": "Fluid organization with many members who can join and leave as they wish. Members can alter their governance power and participation by exchanging non-fungible tokens.",
      "membership": "By staking NFTs",
      "name": "Non-Fungible Token (NFT)-based DAO",
      "supplies": "Non-Fungible Tokens"
    },
    "TokenBased": {
      "description": "Fluid organization with many members who can join and leave as they wish. Members can alter their governance power and participation by exchanging tokens.",
      "membership": "By staking tokens",
      "name": "Token-based DAO",
      "supplies": "Tokens"
    }
  },
  "depositRefundPolicy": {
    "always": "Always",
    "never": "Never",
    "only_passed": "Only passed proposals"
  },
  "emoji": {
    "artistPalette": "Artist palette",
    "atom": "Atom",
    "baby": "Baby",
    "babyAngel": "Baby Angel",
    "balance": "Balance",
    "ballotBox": "Ballot box",
    "bank": "Bank",
    "bee": "Bee",
    "box": "Box",
    "brokenHeart": "Broken heart",
    "cameraWithFlash": "Camera with flash",
    "chains": "Chains",
    "chart": "Chart",
    "check": "Check",
    "clock": "Clock",
    "closedLockWithKey": "Closed lock with key",
    "computerDisk": "Computer disk",
    "controlKnobs": "Control knobs",
    "curvedDownArrow": "Curved down arrow",
    "cycle": "Cycle",
    "deposit": "Deposit",
    "downArrow": "Down arrow",
    "family": "Family",
    "fileFolder": "File folder",
    "filmSlate": "Film slate",
    "fire": "Fire",
    "gas": "Gas",
    "gear": "Gear",
    "hammerAndWrench": "Hammer and wrench",
    "handshake": "Handshake",
    "herb": "Herb",
    "image": "Image",
    "info": "Info",
    "joystick": "Joystick",
    "key": "Key",
    "lockWithPen": "Lock with pen",
    "megaphone": "Megaphone",
    "memo": "Memo",
    "money": "Money",
    "moneyBag": "Money bag",
    "moneyWings": "Money wings",
    "mushroom": "Mushroom",
    "numbers": "Numbers",
    "pencil": "Pencil",
    "people": "People",
    "personRaisingHand": "Person raising hand",
    "pick": "Mining pick",
    "playPause": "Play pause",
    "printer": "Printer",
    "pufferfish": "Pufferfish",
    "raisedHand": "Raised hand",
    "recycle": "Recycle",
    "robot": "Robot",
    "rocketShip": "Rocket ship",
    "suitAndTie": "Suit and tie",
    "swords": "Swords",
    "telescope": "Telescope",
    "thumbDown": "Thumb down",
    "token": "Token",
    "trash": "Trash",
    "unicorn": "Unicorn",
    "unlock": "Unlock",
    "whale": "Whale",
    "wrench": "Wrench",
    "x": "X",
    "yinYang": "Yin Yang"
  },
  "error": {
    "accountListAlreadySaved": "Account list already saved.",
    "accountListNeedsSaving": "Save the account list once you're done.",
    "accountNotFound": "Account not found.",
    "acknowledgeServiceFee": "You must acknowledge the service fee before you can continue.",
    "actionFailedToLoad": "The \"{{action}}\" action failed to load: {{error}}.",
    "addressNotAMember": "This address it not a member of the DAO.",
    "addressNotFoundOnChain": "Address not found on chain.",
    "alreadySentTokenSwap_dao": "The DAO has already sent its share of this token swap.",
    "alreadySentTokenSwap_gov": "The chain has already sent its share of this token swap.",
    "alreadySentTokenSwap_wallet": "You have already sent your share of this token swap.",
    "browserNotSupported": "Not supported in this browser.",
    "cannotStakeMoreThanYouHave": "You can't stake or unstake more tokens than you have.",
    "cannotTxZeroTokens": "You can't stake, unstake, or claim zero tokens.",
    "cannotUseCreateNftCollectionOnStargaze": "You cannot create a new NFT Collection via this action on Stargaze. Use the Stargaze Studio app on the DAO's Apps page instead.",
    "cantDownloadRetroactiveSurveyCsv": "You must have been a member of the DAO when the compensation cycle was created in order to download the results.",
    "chainNotConnected": "Chain not connected.",
    "checkInternetOrTryAgain": "Check your internet connection, refresh the page, or try again later.",
    "closeDateMustBeAfterOpenDate": "Close date must be after open date.",
    "compensationCycleNeedsProfileName": "You have not set a display name. Set a recognizable name for your profile in the sidebar on the right before submitting a contribution so the DAO members know who you are.",
    "correctErrorsAbove": "Please correct the errors above.",
    "couldntFindDAO": "We couldn't find a DAO with that address.",
    "couldntFindProposal": "We couldn't find a proposal with that ID.",
    "couldntFindWallet": "We couldn't find a wallet with that address.",
    "counterpartyBalanceInsufficient": "The counterparty's balance of {{amount}} ${{tokenSymbol}} is insufficient. They may be unable to complete this swap.",
    "crossChainMessagesErroredOrTimedOut": "One or more cross-chain messages errored or timed out and did not get executed on the destination chain.",
    "customTokenNoDecimals": "No decimals were detected for the custom token you entered, so automatic decimal conversion is disabled. Be sure to input the amount in micro-denom units. If you don't know what that means, ask for assistance.",
    "daoAccountNotFound": "The DAO account could not be found for this chain.",
    "daoAndSubDaosAlreadyOnV2": "This DAO (and all of its SubDAOs, if it has any) have already been upgraded.",
    "daoCreationIncomplete": "DAO creation is incomplete. Ensure all required fields have been filled out.",
    "daoFeatureUnsupported": "{{name}} does not support {{feature}} yet.",
    "daoIsInactive_absolute_one": "This DAO is inactive. Proposals cannot be created until {{count}} token is staked.",
    "daoIsInactive_absolute_other": "This DAO is inactive. Proposals cannot be created until {{count}} tokens are staked.",
    "daoIsInactive_percent": "This DAO is inactive. Proposals cannot be created until {{percent}} of voting power is staked.",
    "daoIsPaused": "You cannot create a proposal when the DAO is paused.",
    "daoMissingAccountsOnChains_one": "{{daoName}} is missing an account on {{chains}}.",
    "daoMissingAccountsOnChains_other": "{{daoName}} is missing accounts on the following chains: {{chains}}.",
    "discordAuthFailed": "Discord authentication unexpectedly failed. Try again or reach out to us for assistance.",
    "emptyFile": "This file appears to be empty.",
    "enterAtLeastTwoAccounts": "Enter at least two accounts.",
    "errorOccurredOnPage": "An error occurred on this page.",
    "failedParsingCoreVersion": "Failed to determine core version.",
    "failedToConnect": "Failed to connect.",
    "failedToFindChainAccount": "Failed to find account on {{chain}}.",
    "failedToFindGovernanceProposal": "Failed to find governance proposal with ID {{id}}.",
    "failedToFindMatchingProposalModule": "Failed to find matching proposal module.",
    "failedToFindSpendingAccount": "Failed to find spending account.",
    "failedToGetAccountFromWallet": "Failed to get account from wallet.",
    "failedToGetFactoryTokenInfo": "Failed to get factory token info. Please enter a valid factory denom.",
    "failedToGetTokenInfo": "Failed to get token info. Please enter a valid {{tokenType}} contract address.",
    "failedToLoadIbcConnection": "Failed to load IBC connection.",
    "failedToLoadIpfsProposalSave": "Failed to load proposal save from IPFS.",
    "failedToLoadMembershipRefreshPage": "Failed to load DAO membership status. Refresh the page and try again.",
    "failedToLoadWidget": "Failed to load widget.",
    "failedToRelayAcks": "Failed to relay acknowledgements from {{chain}}.",
    "failedToRelayAndGetAcks": "Failed to relay packets and get acknowledgements.",
    "failedToRelayPackets": "Failed to relay packets to {{chain}}.",
    "feeTokenNotFound": "Fee token not found.",
    "govTokenBalancesDoNotSumTo100": "Total token distribution percentage must equal 100%, but it currently sums to {{totalPercent}}.",
    "icaAlreadyExists": "You already have an account on {{chain}}.",
    "icaDoesNotExist": "You do not have an account on {{chain}}.",
    "icaHostUnsupported": "ICA is either unsupported or misconfigured on {{chain}}, so it is unsafe to use.",
    "insufficientBalance": "Insufficient balance of {{amount}} ${{tokenSymbol}}.",
    "insufficientFunds": "Insufficient funds.",
    "insufficientWalletBalance": "Insufficient wallet balance of {{amount}} ${{tokenSymbol}}.",
    "invalidAccount": "At least one of the specified accounts is invalid.",
    "invalidActionKeys": "Invalid action keys found: {{keys}}",
    "invalidChain": "Invalid chain.",
    "invalidCosmosMessage": "Invalid <2>Cosmos message</2>",
    "invalidDuplicateFound": "Invalid. Duplicate found in other list.",
    "invalidExecuteMessage": "Invalid execute message",
    "invalidFileTypeBulkImport": "Invalid file type. Expected JSON or CSV.",
    "invalidImportFormatCsv": "Invalid format. Missing `ACTION` column or all rows are empty.",
    "invalidImportFormatJson": "Invalid format. Expected `actions` array, with each action containing `key` and `data`.",
    "invalidMessage": "Invalid message",
    "invalidVerificationCode": "Invalid verification code.",
    "invalidWasmFile": "Invalid file type. Expected WASM (.wasm extension) or gzipped WASM (.wasm.gz extension).",
    "loadingChainTokens": "Failed to load tokens on {{chain}}. Try refreshing the page, or try again later.",
    "loadingData": "Failed to load data.",
    "logInToContinue": "Log in to continue.",
    "logInToCreate": "Log in to create a DAO.",
    "logInToFollow": "Log in to follow a DAO.",
    "maxSupplyMustBeAtLeastInitialSupply": "The max supply must be at least as large as the initial supply.",
    "metadataNeedsUploading": "Once the proposal details are finalized, click to upload the metadata to IPFS before submitting.",
    "metadataUpload": "Failed to upload metadata.",
    "missingGovernanceTokenAddress": "Missing governance token address.",
    "missingGovernanceTokenDenom": "Missing governance token denom.",
    "missingIbcChainAccounts_one": "An account needs to be created on the following chain so it can be used during this multi-hop IBC transaction: {{chains}}. In the event of a catastrophic failure, there is a small chance that a multi-hop IBC transaction will not be reversible, and tokens will end up on one of the intermediary chains. In this case, an account must exist on each intermediary to act as a failsafe. Either a cross-chain or ICA account works and will be automatically detected once created.",
    "missingIbcChainAccounts_other": "Accounts need to be created on the following chains so they can be used during this multi-hop IBC transaction: {{chains}}. In the event of a catastrophic failure, there is a small chance that a multi-hop IBC transaction will not be reversible, and tokens will end up on one of the intermediary chains. In this case, an account must exist on each intermediary to act as a failsafe. Either a cross-chain or ICA account works and will be automatically detected once created.",
    "missingNativeToken": "Missing native token.",
    "mustBeAtLeastSixtySeconds": "Must be at least 60 seconds.",
    "mustBeMemberToAddMember": "You must be a member of the DAO to propose adding a new member.",
    "mustBeMemberToCreateCompensationCycle": "You must be a member of the DAO to create a compensation cycle.",
    "mustBeMemberToCreatePost": "You must be a member of the DAO to create a post.",
    "mustBeMemberToCreateProposal": "You must be a member of the DAO to create a proposal.",
    "mustBeMemberToCreateSubDao": "You must be a member of the DAO to create a SubDAO.",
    "mustBeMemberToCreateVestingPayment": "You must be a member of the DAO to create a vesting payment.",
    "nameIncorrectLength": "A DAO's name must be between {{min}} and {{max}} characters.",
    "needsVote": "You must select a vote.",
    "nftCollectionNotChosen": "You must create an NFT collection or enter the address of an existing collection before using this action.",
    "nftMetadataNotUploaded": "You must upload the NFT metadata before you can mint.",
    "noActionsToSimulate": "No actions to simulate.",
    "noCancellableVestingContracts": "There are no vesting contracts that can be cancelled.",
    "noChainVestingManager": "There is no vesting payment manager on {{chain}}. Set one up before attempting to create a new vesting payment on {{chain}}.",
    "noClaimsAvailable": "No claims available.",
    "noCw20Tokens": "There are no CW20 tokens displayed in the treasury.",
    "noFromValidatorSelected": "No from validator selected.",
    "noImageSelected": "No image selected.",
    "noItemsSetUnusableAction": "There are no items set, so this action cannot be used.",
    "noMembers": "This DAO has no members.",
    "noNftCollections": "There are no NFT collections displayed in the treasury.",
    "noNftSelected": "No NFT selected.",
    "noNftsSelected": "No NFTs selected.",
    "noSingleChoiceProposalModule": "The DAO does not have a single choice proposal module.",
    "noSingleChoiceProposalModuleAppsDisabled": "The DAO does not have a recognizable single choice proposal module, so Apps cannot be used at this time.",
    "noTreasuryHistory": "No history found. Try sending some tokens to the treasury, or check back later.",
    "noValenceAccount": "No Rebalancer account found.",
    "noValidatorFound": "No validator found.",
    "noValidatorSelected": "No validator selected.",
    "noVestingContractSelected": "No vesting contract selected.",
    "noVestingContractsNeedingSlashRegistration": "There are no vesting contracts that need a slash to be registered.",
    "noVestingManagersCreated": "You have not created any vesting payment managers.",
    "noVotingPower": "You have not given anyone voting power. Add some members to your DAO.",
    "notATokenSwapContractAddress": "This contract is not a token swap contract.",
    "notAllowedToCreateProposal": "You are not allowed to create a proposal.",
    "notAnNftCollectionAddress": "This contract is not an NFT collection.",
    "notCw20Address": "This contract address is not a CW20 token.",
    "notCw721Address": "This contract address is not a NFT (CW721).",
    "notEnoughForDeposit": "You do not have enough tokens to pay the proposal deposit.",
    "notInActiveSet": "This validator is not in the active set. No rewards will be earned while this is the case.",
    "notPartyInTokenSwap_dao": "The DAO is not a party in this token swap.",
    "notPartyInTokenSwap_gov": "The chain is not a party in this token swap.",
    "notPartyInTokenSwap_wallet": "You are not a party in this token swap.",
    "notYetSentTokenSwap_dao": "The DAO has not yet sent its share of this token swap, so it cannot withdraw.",
    "notYetSentTokenSwap_gov": "The chain has not yet sent its share of this token swap, so it cannot withdraw.",
    "notYetSentTokenSwap_wallet": "You have not yet sent your share of this token swap, so you cannot withdraw.",
    "nothingStaked": "Nothing staked.",
    "notificationsNotAllowed": "Notifications not allowed.",
    "pageNotFound": "We couldn't find that page.",
    "parentMustUpgradeToV2": "SubDAOs cannot upgrade themselves. The parent DAO must upgrade this SubDAO.",
    "percentageDoesNotSumTo100": "Total percentage must equal 100%, but it currently sums to {{totalPercent}}.",
    "polytoneConnectionNotFound": "Polytone connection not found.",
    "polytoneExecutedNoRelay": "The proposal was executed, but not all of the cross-chain messages have been relayed. You must relay them to complete the execution.",
    "proposalIdNotFound": "An unexpected error occurred while redirecting to the proposal. Go back to the DAO's home page and reload to find it.",
    "proposalNotFound": "Proposal not found.",
    "relayerAlreadySetUp": "Relayer already set up.",
    "relayerNotSetUp": "Relayer not set up.",
    "relayerWalletNeedsFunds": "The relayer wallet needs more funds to pay fees. Press Retry to top up the wallet and try again.",
    "selectAChainToContinue": "Select a chain to continue.",
    "simulationFailedInvalidProposalActions": "Simulation failed. Verify your proposal actions are valid.",
    "spendActionInsufficientWarning": "You currently have {{amount}} ${{tokenSymbol}}, which may not be sufficient unless another action transfers funds to the DAO before this one.",
    "stakeInsufficient": "The DAO has {{amount}} ${{tokenSymbol}} staked, which is insufficient.",
    "stargazeDaoNoCrossChainAccountsForPress_action": "This Stargaze DAO has no cross-chain accounts, and Press does not work on Stargaze. Create a cross-chain account for the DAO before setting up Press.",
    "stargazeDaoNoCrossChainAccountsForPress_daoCreation": "Press does not currently work on Stargaze. Create the DAO first, and then create a cross-chain account in order to set up Press.",
    "stepPercentsMustSumTo100": "Step percentages must sum to 100%.",
    "subDaoAlreadyExists": "SubDAO already exists.",
    "tokenAlreadySelected": "Token already selected.",
    "tokenSwapContractNotChosen": "You must create a token swap or enter the address of an existing token swap before using this action.",
    "tooFewChoices": "The proposal must have at least two choices.",
    "tooManyChoices": "The proposal cannot have more than {{count}} choices.",
    "treasuryInsufficient": "The treasury only has {{amount}} ${{tokenSymbol}}, which is insufficient.",
    "treasuryNoTokensCannotStake": "The treasury has no ${{tokenSymbol}}, so you can't stake any tokens.",
    "txNotFound": "Transaction not found.",
    "unexpectedError": "An unexpected error occurred.",
    "unexpectedlyMissingChains": "Unexpectedly missing chains: {{chains}}. Please contact support.",
    "unknownDenom": "Unknown denomination {{denom}}.",
    "unknownError": "An unknown error occurred.",
    "unknownInboxType": "Unknown inbox item type.",
    "unsupportedApprovalFailedRender": "Failed to render approval proposal. Unsupported module.",
    "unsupportedChains_one": "Unsupported chain: {{chains}}.",
    "unsupportedChains_other": "Unsupported chains: {{chains}}.",
    "unsupportedValenceChain": "Valence accounts are not supported on this chain.",
    "unsupportedWallet": "Unsupported wallet. Please use a different wallet."
  },
  "form": {
    "acceptSubDaoAddressInputLabel": "SubDAO to accept",
    "addAnImage": "Add an image",
    "address": "Address",
    "addressInputPlaceholder_any": "Search profile or DAO name or enter an address...",
    "addressInputPlaceholder_contract": "Search DAO name or enter an address...",
    "addressInputPlaceholder_wallet": "Search profile name or enter an address...",
    "admin": "Admin",
    "advanced": "Advanced",
    "afterDelay": "after delay",
    "allowRevotingDescription": "This will allow members to change their vote on proposals before the voting duration deadline. As a result, proposals will not be able to finish early.",
    "allowRevotingTitle": "Allow revoting",
    "allowedMethods": "Allowed methods",
    "allowedMethodsDescription": "Comma separated list of smart contract method names to authorize (i.e. set_item, remove_item)",
    "allowsTradingAfter": "Allows trading after",
    "amount": "amount",
    "amountReceived": "Amount received",
    "anotherAccount": "Another account",
    "approverDescription": "Specify a DAO that must approve proposals before they can be voted on. This does not currently work with multiple choice proposals.",
    "attributeName": "Attribute name",
    "attributeNamePlaceholder": "Community impact",
    "audioUrl": "Audio URL",
    "authzCustomMessageTypeTooltip": "Use a custom protobuf message type. WARNING: do not use this feature unless you know what you're doing.",
    "authzLimitsDescription": "Limitations to put on the Authorzation grant.",
    "authzMessageType": "The type of Cosmos Message to grant / revoke an authorization for.",
    "authzType": "Authorization type",
    "authzTypeDescription": "The type of authorization to grant or revoke.",
    "authzUseCustomMessageType": "Use custom message type",
    "automaticallyAddNFTsTitle": "Automatically add NFTs",
    "automaticallyAddNFTsTooltip": "Should NFTs sent to the DAO get added to the treasury?",
    "automaticallyAddTokensTitle": "Automatically add tokens",
    "automaticallyAddTokensTooltip": "Should tokens sent to the DAO get added to the treasury?",
    "baseToken": "Base token",
    "becomeSubDaoAdminInputLabel": "New parent DAO",
    "blocksToPauseFor": "Blocks to pause for",
    "buttonLabel": "Button label",
    "calls": "Calls",
    "callsDescription": "The maximum amount of times the designated account is authorized to call a smart contract.",
    "chainsCurrentlyRegistered": "Chains currently registered",
    "closeDate": "Close date",
    "codeId": "Code ID",
    "collectionAddress": "Collection address",
    "collectionName": "Collection name",
    "collectionSymbol": "Collection symbol",
    "combined": "Combined",
    "compensationCycleNamePlaceholder": "October Contributor Drop",
    "contractLabel": "Contract label",
    "contractPermissions": "Contract permissions",
    "contractPermissionsDescription": "The contract permissions this authorization grants the grantee.",
    "contribution": "Contribution",
    "contributionAttributes": "Contribution attributes",
    "contributionAttributesDescription": "These are the values for which raters will be asked to provide ratings on submissions, and the associated tokens comprise the compensation paid out for that attribute. For example, \"Community impact\", \"Financial value\", \"Code quality\", etc.",
    "contributionInstructionsPlaceholder": "This is what submitters will see. Provide some guidelines.",
    "contributionSubmitted": "You submitted a contribution for this cycle. Submitting again will overwrite your previous response.",
    "contributorAddress": "Contributor's address",
    "createNewCollection": "Create new collection",
    "createNewTokenSwap": "Create new token swap",
    "createValidatorMessage": "Create validator message",
    "createValidatorMessageTooltip": "Create a validator controlled by your DAO. Note: you will need to run a validator node (on a server for example). Be sure to use that node's public key (<binary> tendermint show-validator).",
    "currentValue": "Current value",
    "customStakingContract": "Custom staking contract",
    "cw20Token": "CW20 Token",
    "cw20Tokens": "CW20 tokens",
    "daoDescriptionPlaceholder": "Give your DAO a description...",
    "daoName": "Name",
    "daoNamePlaceholder": "Give your DAO a name",
    "daosCurrentlyEnabled": "DAOs currently enabled",
    "dates": "Dates",
    "defaultTierName": "Core contributors",
    "delegatorAddress": "Delegator address",
    "deposit": "Deposit",
    "description": "Description",
    "descriptionOptional": "Description (optional)",
    "dragFileHereOrClick": "Drag file here or <2>click</2> to select.",
    "dragImageHereOrClick": "Drag image here or <2>click</2> to select.",
    "dropFileHere": "Drop file here to select it.",
    "dropImageHere": "Drop image here to select it.",
    "earlyExecute": "Early execute",
    "earlyExecuteTooltip": "If the vetoer decides NOT to veto a passed proposal, this allows them to execute the proposal instead, effectively skipping the timelock duration and speeding up the governance process.",
    "editValidatorMessage": "Edit validator message",
    "editValidatorMessageTooltip": "Update the information of a validator controlled by your DAO.",
    "encodedMessages": "List of encoded messages",
    "encodedMessagesTooltip": "Provide a list of protobuf encoded messages with the values in base64.",
    "enterImageUrl": "Enter image URL",
    "executeSmartContract": "Execute smart contract?",
    "executeSmartContractTooltip": "When sending an NFT to a smart contract, you may want to trigger an execution with an optional message on the contract. If you don't know what this means, you probably don't want to use it.",
    "existingCollectionAddress": "Existing collection address",
    "existingTokenSwapContract": "Existing token swap contract",
    "existingTokens": "Existing Tokens",
    "expedited": "Expedited",
    "expeditedDescription": "Expedited proposals have a shorter voting duration and higher voting threshold.",
    "explicitContent": "Explicit content",
    "externalLink": "External link",
    "fast": "Fast",
    "feeShareContractAddressDescription": "The address to claim fee share for. NOTE: you must be admin or the creator of this smart contract to claim fees for it.",
    "feeShareToggleWithdrawerAddress": "Custom withdrawer address",
    "feeShareToggleWithdrawerAddressTooltip_dao": "Customize the address allowed to withdraw fees. Defaults to the DAO.",
    "feeShareToggleWithdrawerAddressTooltip_gov": "Customize the address allowed to withdraw fees. Defaults to the chain's governance module.",
    "feeShareToggleWithdrawerAddressTooltip_wallet": "Customize the address allowed to withdraw fees. Defaults to your wallet.",
    "feeShareWithdrawerAddress": "Withdrawer address",
    "feeShareWithdrawerAddressTooltip": "The address that can withdraw fees.",
    "fileName": "File name",
    "finishDate": "Finish date",
    "from": "From",
    "fromValidator": "From Validator",
    "fundExistingTokenSwap": "Fund existing token swap",
    "funds": "Funds",
    "generic": "Generic",
    "governanceTokenNamePlaceholder": "Longer name of your token (e.g. \"Dog Dao token\")",
    "governanceTokenSymbolPlaceholder": "An alphanumeric symbol (e.g. \"DOG\")",
    "grantAuthorizationOption": "Grant authorization",
    "grantOrRevokeAuthz": "Grant or revoke authorization",
    "granteeAddress": "Grantee address",
    "granteeAddressTooltip": "The address you are granting or revoking to execute a message on behalf of the DAO.",
    "howManyTokensCanTheyMint": "How many ${{tokenSymbol}} can they mint?",
    "iContributedPlaceholder": "I contributed...",
    "ibcTimeout": "IBC Timeout",
    "ibcTimeoutTooltip": "In rare cases, an IBC transaction may fail to relay to the destination chain. A timeout is required to prevent failed transactions from retrying forever and unexpectedly executing in the future. A good timeout is probably a few days to a week after execution. Since passing a proposal takes time, this timeout will be added to the end of the voting period automatically.",
    "ibcTimeoutTooltip_blocks": "In rare cases, an IBC transaction may fail to relay to the destination chain. A timeout is required to prevent failed transactions from retrying forever and unexpectedly executing in the future. A good timeout is probably a few days to a week after execution. Since passing a proposal takes time, make sure this timeout is long enough to cover the entire voting period. This DAO uses a block height-based voting period, so the timeout cannot be added automatically.",
    "ibcTimeoutTooltip_created": "In rare cases, an IBC transaction may fail to relay to the destination chain. A timeout is required to prevent failed transactions from retrying forever and unexpectedly executing in the future. A good timeout is probably a few days to a week after execution.",
    "image": "Image",
    "imageUrlTooltip": "A link to an image.",
    "initialBalances": "Initial balances",
    "initialDeposit": "Initial deposit",
    "initialTokenSupply": "Initial token supply",
    "instantiatedAddress": "Instantiated address",
    "instructions": "Instructions",
    "item": "Item",
    "itemNoValueSet": "This item does not currently have a value set.",
    "itemValueEmpty": "This item is currently set to an empty value.",
    "limits": "Limits",
    "maxCharacters": "Max of {{max}} characters",
    "maxTokenSupply": "Max token supply",
    "maximumSellablePerCycle": "Maximum sellable per cycle",
    "maximumSellablePerCycleDescription": "The proportion of maximum value that is allowed to be sold in one cycle.",
    "medium": "Medium",
    "membersAddress": "Member's address",
    "membersToAddOrUpdate": "Members to add or update",
    "membersToAddOrUpdateDescription": "Set the voting power of each member individually. DAO DAO will calculate the voting weight percentage for you.",
    "membersToRemove": "Members to remove",
    "message": "Message",
    "messageType": "Message type",
    "migrateDescription": "This will <1>migrate</1> the selected contract to a new code ID.",
    "migrateMessage": "Migrate message",
    "minBalance": "Minimum balance",
    "minter": "Minter",
    "minterContract": "Minter contract",
    "minterContractMessage": "Minter contract message",
    "moreThanOneAccount": "More than one account",
    "multipleChoiceDescription": "This allows proposals to contain multiple choices instead of just `Yes` and `No`.",
    "multipleChoiceOptionDescriptionPlaceholder": "Give your choice a description... (supports Markdown format)",
    "multipleChoiceOptionTitlePlaceholder": "Give your choice a title",
    "multipleChoiceTitle": "Multiple choice proposals",
    "name": "Name",
    "nativeOrFactoryToken": "Native or factory token",
    "nftCollectionAddress": "NFT collection address",
    "nftMintInstructions": "Create a unique token ID for the NFT and enter the address of the initial owner below.",
    "nftUploadMetadataInstructions": "Input the NFT's metadata, and then press 'Upload' to store it on IPFS.",
    "noLimit": "No limit",
    "noOne": "No one",
    "nobody": "Nobody",
    "oneOneCollection": "1/1 Collection",
    "oneOrMoreAccounts": "One or more accounts",
    "onlyMembersExecuteTitle": "Only members execute",
    "onlyMembersExecuteTooltip": "If enabled, only members may execute passed proposals.",
    "openDate": "Open date",
    "optional": "optional",
    "options": "Options",
    "orUploadOne": "...or upload one below.",
    "outputToken": "Output token",
    "parameterChanges": "Parameter changes",
    "passingThresholdDescription": "The proportion of voters on a single choice (Yes/No/Abstain) proposal who must vote 'Yes' for it to pass. Passing threshold works differently depending on whether your DAO has a quorum.\n- If your DAO *has a quorum*, the passing threshold is only calculated from those who voted.\n- If your DAO has *no quorum*, this is the percentage of the DAO's voting power that must vote 'yes' for a proposal to pass.",
    "passingThresholdTitle": "Passing threshold",
    "passingThresholdWithQuorumDescription": "The proportion of those who voted on a single choice proposal who must vote 'Yes' for it to pass.",
    "payment": "Payment",
    "percentOfTotalSupply": "Percent of total token supply",
    "percentOfTotalSupplyTooltip": "{{weight}} of the total token supply will be split evenly among all of the members in this tier. Want to add members with different voting power? Add another tier.",
    "plan": "Plan",
    "postToDelete": "Post to delete",
    "postToUpdate": "Post to update",
    "priority": "Priority",
    "projection": "Projection",
    "proportional": "Proportional",
    "proposalDepositDescription": "The number of tokens that must be deposited to create a proposal. Setting this may deter spam, but setting it too high may limit broad participation.",
    "proposalDepositTitle": "Proposal deposit",
    "proposalIdPlaceholder": "Proposal ID",
    "proposalSubmissionPolicyDescription": "Who is allowed to submit proposals to the DAO?",
    "proposalSubmissionPolicyTitle": "Proposal submission policy",
    "proposalType": "Proposal type",
    "proposalsDescriptionPlaceholder": "Give your proposal a description (supports Markdown)...",
    "proposalsTitlePlaceholder": "Give your proposal a title",
    "proposedSpends": "Proposed spends",
    "quorumDescription": "The minimum percentage of voting power that must vote on a proposal for it to be considered. For example, in the US House of Representatives, 218 members must be present for a vote. If you have a DAO with many inactive members, setting this value too high may make it difficult to pass proposals.",
    "quorumDescription_create": "The minimum percentage of voting power that must vote on a proposal for it to be considered. For example, in the US House of Representatives, 218 members must be present for a vote. If you have a DAO with many inactive members, setting this value too high may make it difficult to pass proposals.\n\n*If not using a quorum for the single choice proposal passing threshold, this quorum will only apply to multiple choice proposals.*",
    "quorumTitle": "Quorum",
    "ratingInstructionsPlaceholder": "This is what DAO members will see when they are rating submissions. Provide some guidelines.",
    "ratingsSubmitted": "You submitted ratings for this cycle. Submitting again will overwrite your previous response.",
    "rebalancerBaseTokenDescription": "The token used to calculate the portfolio value. Tokens may be worth different values depending on the base token, though the market tends to consolidate prices through arbitrage.",
    "rebalancerMinBalanceDescription": "Require the rebalancer to maintain a minimum balance of one of the rebalanced tokens, overriding a lower target.",
    "rebalancerSpeedAdvancedDescription": "The rebalancer uses a proportional-integral-derivative (PID) control loop to auction funds daily. Set the coefficients for the proportional, integral, and derivative terms below.",
    "rebalancerSpeedDescription": "How quickly the portfolio is rebalanced.\n- **Slow** rebalances 5% of your portfolio error every day.\n- **Medium** rebalances 10% of your portfolio error every day.\n- **Fast** rebalances 20% of your portfolio error every day.\n\nPortfolio error is the difference between your target portfolio and your current portfolio.",
    "rebalancerTrusteeDescription": "The trustee can pause and resume rebalancing.",
    "recipient": "Recipient",
    "redelegateDestinationValidator": "Destination validator",
    "redelegateDestinationValidatorTooltip": "The validator you are redelegating to.",
    "redelegateSourceValidator": "Source validator",
    "redelegateSourceValidatorTooltip": "The validator you are redelegating away from.",
    "refundFailedProposalsTitle": "Refund failed proposals",
    "refundFailedProposalsTooltip": "Should failed proposals have their deposit refunded?",
    "refundPolicyTitle": "Once a proposal completes, when should deposits be refunded?",
    "requireProposalDepositTitle": "Require proposal deposit",
    "requireProposalDepositTooltip": "If enabled, requires that tokens are deposited to create a proposal.",
    "revokeAuthorizationOption": "Revoke authorization",
    "royalties": "Royalties",
    "salt": "Salt",
    "sameAsPublicSubmissionCloseDate": "Same as public submission close date",
    "selectAnImage": "Select an image",
    "sha256Checksum": "SHA256 checksum",
    "showAdvancedNftFields": "Show advanced fields",
    "showAdvancedNftFieldsTooltip": "The form above only allows setting name and description in the metadata attached to the image. Turn this on to view more advanced fields.",
    "showAdvancedSettings": "Show advanced settings",
    "slow": "Slow",
    "smartContractAddress": "Smart contract address",
    "smartContractMessage": "Smart contract message",
    "smartContractMessageDescription": "The smart contract message to execute.",
    "speed": "Speed",
    "spendingAllowance": "Spending allowance",
    "spendingAllowanceDescription": "The amount of funds allowed to be spent by the authorized account.",
    "standardCollection": "Standard Collection",
    "startDate": "Start date",
    "steps": "Steps",
    "subDaosToRecognize": "SubDAOs to recognize",
    "subDaosToRemove": "SubDAOs to remove",
    "suggestedItems": "Suggested items",
    "suggestedValues": "Suggested values",
    "symbol": "Symbol",
    "targetOverrideStrategy": "Target override strategy",
    "targetOverrideStrategyDescription": "The strategy used for overriding targets when settings conflict (for example, a minimum balance may cause a token to surpass its target percentage after a price increase).\n- **Proportional** means that all other targets are adjusted proportionally.\n- **Priority** means that the rebalancer will try to ensure the higher priority targets (based on their order) are met, sacrificing the targets of the lower priority tokens.",
    "tierNameTitle": "Tier name",
    "tierNameTooltip": "The \"class\" of member. For example: \"Core developers\" or \"friends and family.\" These names are only for your reference.",
    "timelockDuration": "Timelock duration",
    "timelockDurationTooltip": "The duration of time after a proposal's voting period expires during which it can be vetoed. The proposal cannot be executed until this timelock expires. If a proposal passes early due to sufficient voting turnout, the timelock still applies after the proposal's entire voting period (and NOT the early pass time).",
    "title": "Title",
    "to": "To",
    "toValidator": "To Validator",
    "tokenAddress": "Token address",
    "tokenContractAddressTitle": "Token contract address",
    "tokenDefinition": "Token definition",
    "tokenIdentifier": "Token identifier",
    "tokenInfo": "Token info",
    "tokenInstructions": "Token instructions",
    "tokenSwapCreateInstructions": "In this step, you will create the token swap. This creation step describes how many funds each party needs to send for the swap to complete. <2>No funds will be transferred at this time.</2>",
    "tokenSwapExistingInstructions": "In this step, you will choose a token swap that you (or the counterparty) has already initiated. After you fund a swap, you can withdraw the tokens you funded unless (or until) the counterparty has paid. Likewise, the counterparty can withdraw the tokens they funded until you pay.",
    "tokenTargets": "Token targets",
    "tokens": "Tokens",
    "trustee": "Trustee",
    "uniqueTokenId": "Unique token ID",
    "unjailValidatorMessage": "Unjail validator message",
    "unjailValidatorMessageTooltip": "When a validator is 'jailed' for downtime, you must submit an Unjail transaction from the operator account in order to be able to get block proposer rewards again.",
    "unlockPercent": "Unlock percent",
    "unspecified": "Unspecified",
    "unstakingDurationDescription": "In order to vote, members must stake their tokens with the DAO. Members who would like to leave the DAO or trade their governance tokens must first unstake them. This setting configures how long members have to wait after unstaking their tokens for those tokens to become available. The longer you set this duration, the more sure you can be sure that people who register their tokens are keen to participate in your DAO's governance.",
    "unstakingDurationTitle": "Unstaking period",
    "updateAdminDescription": "This will update the admin for the selected contract. The new admin will have complete control over the contract. Take care.",
    "updateProposalSubmissionConfigDescription": "This will update the proposal submission configuration for this DAO. A bad configuration can lock the DAO. Take care. If you have questions, please feel free to ask in the <2>DAO DAO Discord</2>.",
    "updateProposalSubmissionConfigTitle": "Update Proposal Submission Config",
    "updateVotingConfigDescription": "This will update the voting configuration for this DAO. A bad configuration can lock the DAO or create unexpected voting outcomes. Take care. If you have questions, please feel free to ask in the <2>DAO DAO Discord</2>.",
    "updateVotingConfigTitle": "Update Voting Config",
    "uploadNewFileQuestion": "Would you like to use a different file?",
    "url": "URL",
    "useCw20": "Use CW20",
    "useCw20ExecuteTooltip": "Fund the smart contract execution with a CW20 token instead of a native token.",
    "useDirectIbcPath": "Use direct IBC path",
    "useDirectIbcPathTooltip": "When enabled, avoid using the optimized multi-hop path. This may result in an undesirable IBC token on the final chain.",
    "useExistingCollection": "Use existing collection",
    "useLegacyProposalType": "Use legacy proposal type",
    "useQuorum": "Use quorum",
    "validator": "Validator",
    "value": "Value",
    "vestingDuration": "Vesting duration",
    "vetoBeforePassed": "Veto before passed",
    "vetoBeforePassedTooltip": "This allows the vetoer to veto a proposal while it is still open for voting (i.e. before it passes). Voting is still allowed for the entire voting period so that voters may express their preferences, but the proposal will never be executable once vetoed.",
    "videoUrl": "Video URL",
    "votingDurationDescription": "The amount of time proposals are open for voting. A low proposal duration may increase the speed at which your DAO can pass proposals. Setting the duration too low may make it difficult for proposals to pass as voters will have limited time to vote. After this time elapses, the proposal will either pass or fail.",
    "votingDurationTitle": "Voting duration",
    "votingWeightPerMember": "Voting weight per member",
    "votingWeightPerMemberTooltip": "Each member of this tier will receive {{weight}} voting power. Want to add members with different voting power? Add another tier.",
    "votingWeightPlaceholder": "Voting weight",
    "weightByVotingPower": "Weight by voting power",
    "weightByVotingPowerTooltip": "When computing a contributor's final rating used to calculate their compensation, this will weight each DAO member's ratings by their own voting power to produce a weighted average.",
    "whatDoWeDistributeQuestion": "What do we distribute?",
    "whatReceiveCounterpartyQuestion": "What do you need to <2>receive</2> from the counterparty for the token swap to complete?",
    "whatSendCounterpartyQuestion": "What do you need to <2>send</2> to the counterparty for the token swap to complete?",
    "whoAreYouQuestion": "Who are you?",
    "whoCanCancelPayment": "Who can cancel this payment?",
    "whoCanMint": "Who can mint an NFT?",
    "whoCanUseContract": "Who can use this contract?",
    "whoCanVetoProposals": "Who can veto proposals?",
    "whoIsCounterparty": "Who is the counterparty?",
    "whoTransferNftQuestion": "Where would you like to transfer the NFT?",
    "widget": "Widget",
    "withdrawAddress": "Withdraw address"
  },
  "format": {
    "estUsdValue": "${{amount}} est. USD value",
    "inTime": "in {{value}} {{unit}}",
    "time": "{{value}} {{unit}}",
    "timeAgo": "{{value}} {{unit}} ago",
    "timeLeft": "{{value}} {{unit}} left",
    "token": "{{amount}} ${{symbol}}"
  },
  "govProposalStatus": {
    "depositPeriod": "Deposit Period",
    "failed": "Failed",
    "passed": "Passed",
    "pendingSubmission": "Pending Submission",
    "rejected": "Rejected",
    "unrecognized": "Unrecognized",
    "unspecified": "Unspecified",
    "votingPeriod": "Voting Period"
  },
  "govProposalStatusTitleShort": {
    "deposit": "Deposit",
    "failed": "Failed",
    "passed": "Passed",
    "rejected": "Rejected",
    "unrecognized": "Unrecognized",
    "unspecified": "Unspecified",
    "voting": "Voting"
  },
  "govProposalType": {
    "CancelSoftwareUpgradeProposal": "Cancel Software Upgrade",
    "CommunityPoolSpendProposal": "Community Pool Spend",
    "ParameterChangeProposal": "Parameter Change",
    "SoftwareUpgradeProposal": "Software Upgrade",
    "TextProposal": "Text"
  },
  "inboxItemType": {
    "joined_dao": {
      "description": "When you're added to a DAO.",
      "title": "Joined DAO"
    },
    "pending_proposal_created": {
      "description": "When a pending proposal that needs approval is created.",
      "title": "Pending proposal created"
    },
    "pending_proposal_rejected": {
      "description": "When a pending proposal is rejected.",
      "title": "Pending proposal rejected"
    },
    "proposal_closed": {
      "description": "When a proposal is rejected and closed.",
      "title": "Proposal closed"
    },
    "proposal_created": {
      "description": "When a proposal is created.",
      "title": "Proposal created"
    },
    "proposal_executed": {
      "description": "When a proposal is passed and executed.",
      "title": "Proposal executed"
    }
  },
  "info": {
    "abstainVote": "Abstain",
    "acceptSubDaoActionDescription": "Accept a pending SubDAO's ownership transfer request. Be sure that the SubDAO-to-be has already requested to join your DAO through the \"Become SubDAO\" action.",
    "acceptSubDaoActionOtherActionsAdded": "Other actions that are required to register a new SubDAO have been added to the proposal automatically.",
    "acceptSubDaoDescription": "Accept a DAO's request to become a SubDAO.",
    "acknowledgeServiceFee": "We acknowledge that {{fee}} will be charged from the treasury for registration to the rebalancer.",
    "acknowledgeServiceFee_none": "We acknowledge that there is no fee to register for the rebalancer.",
    "actionLibraryDescription": "Choose one or more actions to perform upon execution.",
    "actionPageWarning": "There are {{actions}} actions across {{pages}} pages. Make sure you view all pages before voting.",
    "actionPaysTokenSwap_paid": "This action sent {{amount}} ${{tokenSymbol}} to the token swap contract below.",
    "actionPaysTokenSwap_unpaid": "This action sends {{amount}} ${{tokenSymbol}} to the token swap contract below.",
    "actionWithdrawsTokenSwap_done": "This action withdrew {{amount}} ${{tokenSymbol}} from the token swap contract below.",
    "actionWithdrawsTokenSwap_pending": "This action withdraws {{amount}} ${{tokenSymbol}} from the token swap contract below.",
    "actions_one": "{{count}} action",
    "actions_other": "{{count}} actions",
    "activePushNotificationSubscriptions_one": "You have {{count}} subscription active.",
    "activePushNotificationSubscriptions_other": "You have {{count}} subscriptions active.",
    "activeThresholdDescription": "The amount of voting power that needs to be staked in order for the DAO to become active and thus allow proposals to be created.",
    "addCw20ToTreasuryActionDescription": "Display the DAO's balance of a CW20 token in the treasury view.",
    "addCw721ToTreasuryActionDescription": "Display the NFTs owned by the DAO from a CW721 NFT collection in the treasury view.",
    "addToProfileExplanation": "Add the current chain to your profile shown below.",
    "addWalletToProfile": "Add this wallet to your profile.",
    "addWalletToProfileToEdit": "You cannot edit your profile until you add the chain your wallet is currently connected to. Click to add it.",
    "addedToDaoFollowPrompt": "You were added as a member to this DAO. Follow it to receive updates.",
    "advancedVotingConfigWarning": "These are advanced features. If you configure them without fully understanding how they work, you can lock your DAO, making it impossible for proposals to pass.",
    "allChains": "All chains",
    "allCrossChainAccountsCreated": "All available cross-chain accounts have been created. If you want to request support for other chains, please reach out to us on Discord.",
    "allNftSupportedChainsAddedPrompt": "NFTs loaded from all DAO DAO-supported chains.",
    "allNftSupportedChainsAddedPromptTooltip": "You have added all chains that DAO DAO supports to your profile.",
    "allSupportedTokensAdded": "All supported tokens have been added.",
    "allowlist": "Allowlist",
    "andNumMore": "and {{count}} more",
    "anyone": "Anyone",
    "approvalProposalExplanation_approved": "This proposal was accepted by the approver.",
    "approvalProposalExplanation_pending": "This proposal is waiting to be accepted by the approver so that it can open for voting.",
    "approvalProposalExplanation_rejected": "This proposal was not allowed to open for voting because the approver rejected it.",
    "approverEnabledNoMultipleChoice": "Approver is enabled, which is currently incompatible with multiple choice proposals.",
    "approverExplanation_choosing": "DAOs shown below have this DAO ({{daoName}}) set as their approver. This action completes the approval setup process by enabling the creation of approval proposals in {{daoName}} when the selected DAO below attempts to create a new proposal.",
    "approverExplanation_chose": "The DAO shown below has this DAO ({{daoName}}) set as their approver. This action completes the approval setup process by enabling the creation of approval proposals in {{daoName}} when the selected DAO below attempts to create a new proposal.",
    "approverProposalExplanation_closed": "This proposal is responsible for approving a proposal in another DAO. Since it was rejected and closed, the original proposal was not allowed to open for voting.",
    "approverProposalExplanation_executed": "This proposal is responsible for approving a proposal in another DAO. Since it was passed and executed, the original proposal opened for voting.",
    "approverProposalExplanation_execution_failed": "This proposal is responsible for approving a proposal in another DAO. An unexpected error occurred (execution failed). Something is wrong.",
    "approverProposalExplanation_open": "This proposal is responsible for approving a proposal in another DAO. If this proposal is passed and executed, the original proposal will open for voting.",
    "approverProposalExplanation_passed": "This proposal is responsible for approving a proposal in another DAO. Now that it passed, it must be executed in order to open the original proposal for voting.",
    "approverProposalExplanation_rejected": "This proposal is responsible for approving a proposal in another DAO. Now that it was rejected, it must be closed in order to mark the original proposal as denied.",
    "appsProposalDescription": "Add a title and description, and then review the actions generated by the app. Once it all looks good, publish it to the DAO for voting.",
    "areTheyMissingQuestion": "Are they missing?",
    "authzAuthorizationDescription": "Grant / revoke authorizations that allow other accounts to perform actions on behalf of the DAO.",
    "authzExecDescription": "Perform an action on behalf of another account.",
    "authzWarning": "USE WITH CAUTION! Granting an Authorization allows another account to perform actions on behalf of your account.",
    "available": "available",
    "availableBalance": "Available balance",
    "availableHistoryLoaded": "All available history has been loaded.",
    "becomeSubDaoActionDescription": "Provide the address of a DAO to request to become its SubDAO. The DAO will then need to accept your request to complete the ownership transfer and become your parent. Once the transfer is complete, only your new parent DAO can transfer ownership in the future. Keep in mind that your parent DAO will have full authority to execute anything it wants to on behalf of this DAO.",
    "becomeSubDaoActionDescription_created": "The parent DAO needs to accept this request to complete the ownership transfer and become your parent. Once the transfer is complete, only your new parent DAO can transfer ownership in the future. Keep in mind that your parent DAO will have full authority to execute anything it wants to on behalf of this DAO.",
    "becomeSubDaoDescription": "Request to become a SubDAO of a DAO.",
    "betterNonPfmIbcPathAvailable": "A better path exists that unwinds the IBC token properly, but it requires hops that cannot be performed in a single proposal due to the configuration of one or more of the chains involved. You may safely use the direct path above, though it likely results in an undesirable IBC token on the final chain that will eventually need to be unwound. If you wish to unwind it manually, follow the path below by creating an individual proposal for the first hop, then a second proposal once the first one is passed and executed, and so on.",
    "betterPfmIbcPathAvailable_one": "A better path exists that unwinds the IBC token properly, but it requires you to have an account on {{chains}}. An account must exist on each intermediary chain in a multi-hop transaction to act as a failsafe in the event of catastrophic failure (unlikely). Either a cross-chain or ICA account works and will be automatically detected once created. You may safely use the direct path above, though it likely results in an undesirable IBC token on the final chain that will eventually need to be unwound.",
    "betterPfmIbcPathAvailable_other": "A better path exists that unwinds the IBC token properly, but it requires you to have accounts on the following chains: {{chains}}. An account must exist on each intermediary chain in a multi-hop transaction to act as a failsafe in the event of catastrophic failure (unlikely). Either a cross-chain or ICA account works and will be automatically detected once created. You may safely use the direct path above, though it likely results in an undesirable IBC token on the final chain that will eventually need to be unwound.",
    "blocksBehind": "Blocks behind",
    "bulkImportActionExplanation": "Choose a JSON or CSV file below that matches the format described in <2>this guide</2>.",
    "bulkImportActionsDescription": "Import many actions at once.",
    "burnNftDescription": "Burn an NFT.",
    "bypassSimulationExplanation": "Simulating the proposal failed. If you don't know what this means, one of the actions above is probably misconfigured. If you are sure you want to publish it anyway, click the button again.",
    "cannotRemoveNoneOption": "You cannot remove this option. It will be added to the end of the list.",
    "catchingUp": "Catching up...",
    "chainTokensNotShowingUpPrompt": "Are your tokens not showing up? Add more chains.",
    "chainsDeployedTooltip": "The number of chains with native DAO DAO deployments.",
    "chooseProfilePictureSubtitle": "Use an NFT you own to represent your identity, or upload an image.",
    "chooseTokenToPayWith": "Choose token to pay with",
    "claimToReceiveUnstaked": "Claim them to receive your unstaked tokens.",
    "claimedRewards": "Claimed rewards",
    "closedAtDate": "Closed at {{date}}",
    "closesAtDate": "Closes at {{date}}",
    "communityPoolDepositDescription": "Deposit funds into the community pool.",
    "compensationCycleAwaitingRating_member": "Contributions have been submitted, and now DAO members must rate them. Review the submissions and submit your ratings.",
    "compensationCycleAwaitingRating_notMember": "Contributions have been submitted and are now being rated by DAO members.",
    "compensationCycleClosedAwaitingCompletion_member": "Contributions and ratings have been submitted. Review the results and create a proposal to complete the cycle. Alternatively, you may link it to an existing proposal or complete it without creating a proposal.",
    "compensationCycleClosedAwaitingCompletion_notMember": "Contributions and ratings have been submitted, and DAO members are now reviewing the results.",
    "completeRelayOrLoseFunds": "Make sure you have completed the relaying process, or you may lose the tokens you sent to the relayers to pay fees.",
    "completed": "Completed",
    "configureRebalancerDescription": "Configure the treasury rebalancer.",
    "configureVestingPaymentsDescription": "Configure vesting payments and enable them on more chains.",
    "configureWalletModalExplanation": "You have a wallet extension installed, but it doesn't seem like you've set up a wallet. Create a wallet to continue.",
    "connectedTo": "Connected to {{name}}",
    "copiedAddressToClipboard": "Copy address to clipboard",
    "copiedChainAddress": "Copied {{chain}} address.",
    "copiedLinkToClipboard": "Copied link to clipboard.",
    "copiedToClipboard": "Copied to clipboard.",
    "copyWalletAddressTooltip": "Copy wallet address",
    "copying": "Copying...",
    "count": "Count",
    "createCrossChainAccountDescription": "Create an account for this DAO on another chain.",
    "createCrossChainAccountExplanation": "This action creates an account on another chain, allowing this DAO to perform actions on that chain.",
    "createDaoActionDescription": "Create a new DAO.",
    "createDaoFeesExplanation": "Some chains charge fees to create new tokens. These fees are sent directly to the chain—not DAO DAO.",
    "createFirstOneQuestion": "Create the first one?",
    "createIcaDescription": "Create an account with the Interchain Accounts SDK module.",
    "createIcaRegister": "You must register this ICA chain with the DAO so that the account shows up in the treasury and is usable in actions.",
    "createNftCollectionDescription_dao": "Create a new NFT collection controlled by the DAO.",
    "createNftCollectionDescription_gov": "Create a new NFT collection controlled by the chain.",
    "createNftCollectionDescription_wallet": "Create a new NFT collection controlled by you.",
    "createPermitToInteractWithDao": "Create a permit for this browser to view your membership status, vote, and interact with the DAO securely.",
    "createPostDescription": "Create a post on the DAO's press.",
    "createPressContract": "To set up Press, you must first create a smart contract to manage it.",
    "createStep1": "Pick a DAO type and name it",
    "createStep2": "Governance configuration",
    "createStep3": "Voting configuration",
    "createStep4": "Review and approve",
    "createValenceAccountDescription": "Create a new Rebalancer account.",
    "createdPressContract": "The press contract has been created.",
    "creatingDao": "Creating DAO...",
    "creationPolicyTooltip": "Who is allowed to create proposals?",
    "crossChainExecuteDescription": "This action executes a cross-chain transaction.",
    "customActionDescription_dao": "Perform any custom action a wallet can.",
    "customActionDescription_gov": "Perform any custom action.",
    "customActionDescription_wallet": "Perform any custom action.",
    "customAppWarning": "Apps must explicitly support DAO DAO app integration. Unless you are sure that an app is supported, it likely will not work. Custom app entry is primarily to help developers test new app integrations. Contact the app's developers if you want them to add DAO DAO support.",
    "daoAdminExecDescription": "Execute actions on behalf of a DAO with you as the admin. A parent DAO could use this to execute actions on behalf of a SubDAO.",
    "daoApproverExplanation": "An approver must approve proposals before they open for voting.",
    "daoCreationProcessExplanation": "Creating your DAO has never been this easy:",
    "daoCreationRequiresChainGovProp": "{{chain}} requires that your DAO is created through a chain governance proposal. Click Continue to open the proposal creation page.",
    "daoInfoWillRefresh": "DAO information may take up to {{seconds}} seconds to update on all pages once proposal is executed.",
    "daoNameAZ": "DAO name (A → Z)",
    "daoNameZA": "DAO name (Z → A)",
    "daoRatingsDescription": "Once the submission window closes, the members of this DAO will be able to rate each submission. Choose when the ratings window closes, and add some guidelines for the raters.",
    "daoStructureUnsupportedTooltip": "This DAO structure is not supported by the currently selected chain. Try changing the chain if you want to create this type of DAO.",
    "daoVetoerExplanation": "A vetoer can veto proposals in the DAO.",
    "daodaoLogo": "DAO DAO Logo",
    "daodaoWithVersion": "DAO DAO v{{version}}",
    "daosGovernedTooltip": "These DAOs use ${{tokenSymbol}} as their governance token.",
    "daosLogo": "DAO's Logo",
    "dateFollowedNewestOldest": "Date followed (newest → oldest)",
    "dateFollowedOldestNewest": "Date followed (oldest → newest)",
    "deletePostDescription": "Delete a post from the DAO's press.",
    "depositFiatDescription": "Buy $USDC with a card or bank account, and it will be sent directly to the DAO's treasury. Balances may take some time to update once the Kado transaction completes.",
    "depositFromStargazeQuestion": "Deposit NFTs from Stargaze?",
    "depositNftsModalSubtitle": "Select the NFTs you want to deposit into {{daoName}} from your Stargaze wallet.",
    "depositRefundsTooltip": "The conditions for refunding the proposal deposit.",
    "depositToGovernanceProposalDescription": "Deposit to a chain governance proposal in the deposit period.",
    "depositTokenSubtitle": "Tokens will be sent from your wallet.",
    "depositTokenWarning": "Tokens will be sent from your wallet to the DAO. You cannot undo a deposit. You will not gain voting power by depositing tokens.",
    "direct": "direct",
    "disableVetoerDaoDescription": "Stop displaying proposals from a DAO on the home page when they are vetoable.",
    "disabled": "Disabled",
    "discordNotifierExplanation": "The Discord Notifier broadcasts a message to registered Discord channels when a proposal is created. Clicking the button below begins the registration process; it will take you to Discord's website and prompt you to choose a server and channel. You will then be redirected back here and prompted to authorize with your wallet. Once this is done, proposal notifications are enabled.",
    "discordNotifierRegistrations_one": "You have setup {{count}} notifier.",
    "discordNotifierRegistrations_other": "You have setup {{count}} notifiers.",
    "dontKnowNotSure": "Don't know/Not sure",
    "draftSavedAtTime": "Draft saved at {{time}}.",
    "draftSaving": "Draft saving...",
    "draftStillSaved": "The draft will still be saved.",
    "easilyShareLink": "Easily share a link by copying it below.",
    "emailVerificationResent": "Email verification resent.",
    "emailVerified": "Email verified.",
    "emptyInboxCaughtUp": "You're all caught up!",
    "enableMultipleChoiceProposalsDescription": "Allow members to vote on many options in one proposal.",
    "enableMultipleChoiceProposalsExplanation": "This action will enable the creation of multiple choice proposals, which allow voting on many options in one proposal. Each option can have a list of actions that execute if that option wins. It will be configured to match the current config of the single choice proposal module.",
    "enableVetoerDaoDescription": "Display proposals from a DAO on the home page when they are vetoable.",
    "enabled": "Enabled",
    "enterCustomToken": "Enter custom token",
    "enterNameBeforeSavingDraft": "Enter a name before saving a draft",
    "errored": "Errored",
    "establishedTooltip": "When the DAO was created.",
    "estimatedStargazeUsdValueTooltip": "USD value is estimated using price data from Stargaze. This is not fully reflective of realizable spending power due to liquidity limitations.",
    "estimatedTreasuryUsdValueTooltip": "The USD value of DAO treasuries is estimated by summing the value of all tokens held in the treasury that are listed on CoinGecko, Osmosis, Astroport, Stargaze, and White Whale. This is not fully reflective of realizable spending power due to liquidity limitations.",
    "estimatedUsdValueTooltip": "USD value is estimated using price data from CoinGecko, Osmosis, White Whale, and Astroport. This is not fully reflective of realizable spending power due to liquidity limitations.",
    "executeSmartContractActionDescription": "Execute a message on a smart contract.",
    "executorAccountTooltip": "This is the account that will be executing the message on the smart contract. The contract will see this as the `sender`.",
    "extensionsDescription": "Optionally set up extensions to expand your DAO's capabilities. You can always set these up later.",
    "failing": "Failing",
    "feeShareDescription": "Earn gas fees from a smart contract you deployed.",
    "feedDescription": "Open proposals in the DAOs you follow will show up here.",
    "fetchedAtTime": "Fetched at {{time}}",
    "fiatOnOffRampDescription": "Using a card or bank account, you can buy $USDC that will be sent straight to your wallet. You can also sell $USDC from your wallet and receive USD in your bank account.",
    "findCategory": "Find a category...",
    "finishedAt": "Finished at",
    "finishesAt": "Finishes at",
    "followTooltip": "Follow this DAO to show it in your feed and receive proposal notifications according to your settings.",
    "forceExecuteTooltip": "Ignore form errors and attempt to execute the transaction anyway. The transaction will still be simulated on-chain as a final verification that the actions are valid.",
    "forcePublishTooltip": "Ignore form errors and attempt to publish the proposal anyway. The proposal actions will still be simulated on-chain as a final verification that the actions are valid.",
    "fundRebalancerDescription": "Deposit funds into the rebalancer.",
    "funded": "Funded",
    "getTokensOn": "Get tokens on {{name}}.",
    "goToParent": "Go to parent DAO",
    "govDepositDescription": "{{amount}} ${{symbol}} is needed to enter the voting period. {{minAmount}} ${{symbol}} is the minimum needed to submit a proposal.",
    "govNftCollection": "Governance NFT Collection",
    "govTokenAddress": "Governance Token",
    "groupAddress": "CW4 Group",
    "highestUsdValue": "Highest USD value",
    "historySinceDate": "History since {{date}}",
    "howCompleteCycle": "How do you want to complete this cycle?",
    "ibcTransferPathTooltip": "There is only one IBC hop in this spend.",
    "ibcTransferPathTooltip_pfm": "The IBC hops in this spend utilize packet-forward-middleware to send tokens through several chains in one transaction.",
    "icaExecuteDescription": "Execute an action from an ICA account on another chain.",
    "icaExperimental": "ICA is experimental and not properly supported by many chains. Only use this if you know what you are doing.",
    "icaHostSupported": "ICA is supported on this chain. Use at your own risk.",
    "importMultisigDescription": "Easily configure a DAO with the members and voting threshold of a multisig by importing it from any Cosmos chain below.",
    "inactiveDaoTooltip": "This DAO has no proposals and may be inactive or a duplicate.",
    "inactiveDaosTooltip": "These DAOs have no proposals and may be inactive or duplicates.",
    "inboxConfigPreferencesDescription": "Choose where you want to receive notifications. Website notifications appear here on the Inbox page.",
    "inboxEmailTooltip": "Receive inbox notifications in your email.",
    "installKeplrMobileOrScanQrCode": "If you don't have Keplr Mobile installed, <2>click here to install it</2> or scan the QR code at the bottom with another device.",
    "instantiatePredictableSmartContractActionDescription": "Instantiate a smart contract with a predictable address.",
    "instantiateSmartContractActionDescription": "Instantiate a smart contract.",
    "instantiatorAccountTooltip": "This is the account that will be instantiating the message on the smart contract. The contract will see this as the `sender`.",
    "intakeClosesAt": "Intake closes at {{date}}.",
    "intakeOpensAt": "Intake opens at {{date}}.",
    "intakeOpensAtAndClosesAt": "Intake opens at {{openDate}} and closes at {{closeDate}}.",
    "jsonIsValid": "json is valid",
    "keplrMobileReset": "If nothing shows up in Keplr Mobile, <2>click here to reset</2> and try connecting again. Refresh the page if the problem persists.",
    "keplrModalWalletExplanation": "Your wallet is your digital identity on the blockchain. Having one lets you interact with web3 applications like DAO DAO.\nWe recommend the Keplr wallet.",
    "lastBlock": "Last block",
    "lastUpdatedOnDate": "Last updated on {{date}}",
    "loading": "Loading...",
    "loadingCustomToken": "Loading custom token metadata...",
    "loadingMembership": "Loading membership...",
    "loadingProposalStatus": "The proposal is loading...",
    "logInToViewMembership": "Log in to view your membership status in the DAO.",
    "logInToViewPage": "Log in to view this page.",
    "logo": "Logo",
    "lowestUsdValue": "Lowest USD value",
    "majority": "Majority (>50%)",
    "manageIcasDescription": "Register or unregister an ICA chain. ICAs must be registered (once created) to be shown in the treasury and used in actions.",
    "manageMembersActionDescription": "Add, update, or remove members from the DAO.",
    "managePayrollDescription": "Manage the payroll system used by the DAO. The chosen system appears as a new tab on the DAO's home page.",
    "manageStakingDescription": "Manage native token staking: claim rewards, delegate, redelegate, and undelegate.",
    "manageStorageItemsDescription": "Manage storage items associated with your DAO. Set or remove key / value pairs.",
    "manageSubDaoPauseDescription": "Pause or unpause a SubDAO.",
    "manageSubDaosActionDescription": "Recognize or remove SubDAOs from the DAO.",
    "manageTreasuryNftsDescription": "Manage NFT Collections displayed on your DAO's treasury page.",
    "manageTreasuryTokensDescription": "Manage Tokens displayed on your DAO's treasury page.",
    "manageVestingDescription": "Create a vesting contract that will release tokens to a recipient over time, or cancel an existing one.",
    "manageVetoableDaosDescription": "Enable or disable showing vetoable proposals on this DAO's home page from a DAO that this DAO has the power to veto.",
    "manageWidgetsDescription": "Add, update, and remove widgets.",
    "maxSlippageDescription": "As the transaction is executing, the swap price will fluctuate. If the price slips beyond this maximum slippage, the swap will not occur.",
    "maxTokenSupplyDescription": "This is the maximum number of tokens that will ever exist, and it can never be changed. The DAO will be able to mint tokens up until this amount exists.",
    "meBalancesNftsDescription": "These are the NFTs you own on {{chainName}}.",
    "members": "members",
    "membersTooltip": "The number of members in the DAO.",
    "membershipDaoNotMemberInfo": "You are not a member of {{daoName}}. To become a member, existing members must vote to add you.",
    "memoPlaceholder": "Enter a memo (optional)...",
    "mergeProfilesExplanation": "Select the profile you want to keep (the rest will be merged into it).",
    "mergeProfilesTooltip": "Your wallet is attached to multiple profiles. Merge them to avoid confusion.",
    "migrateFollowingDescription": "Followed DAOs require a migration to a new storage mechanism.",
    "migrateMigalooV4TokenFactoryExplanation": "The token factory module on Migaloo has been migrated to a new version that is more actively maintained. Because this DAO created a new token before the migration, the DAO's token factory contract that interacts with the chain module must now be upgraded. This action upgrades the token factory contract to a version that supports the new token factory module.",
    "migrateSmartContractActionDescription": "Migrate a CosmWasm contract to a new code ID.",
    "migrateTokenFactoryModuleDescription": "Update the DAO to support the new token factory module.",
    "minimumOutputRequiredDescription_dao": "Before the proposal is passed and executed, the swap price will fluctuate. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "minimumOutputRequiredDescription_gov": "Before the proposal is passed and executed, the swap price will fluctuate. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "minimumOutputRequiredDescription_wallet": "The exact swap price will fluctuate during the transaction, but the minimum output amount is guaranteed. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "mintActionDescription": "Mint new governance tokens.",
    "mintExplanation": "This action mints new tokens, increasing the token supply. With great power comes great responsibility; be careful! If you have an active threshold set, this may lock the DAO.",
    "mintNftDescription": "Create a new NFT.",
    "missingPermit": "Missing permit",
    "mustViewAllActionPagesBeforeVoting": "You must view all action pages before voting.",
    "na": "N/A",
    "name": "Name",
    "neutronTransferFeeApplied": "Neutron applies a {{fee}} fee on IBC transfers out of the chain.",
    "newMemberExplanation": "To add a new member, the DAO must pass a proposal.",
    "nftCollectionExplanation_all": "In this DAO, voting share is determined by staking NFTs from a collection. This is the collection members stake to gain voting power in the DAO.",
    "nftCollectionExplanation_staked": "These NFTs have been staked by members of the DAO to earn voting power.",
    "nftCollectionExplanation_unstaked": "These NFTs would provide voting power if they were staked, but no one is currently staking them.",
    "nftImage": "NFT image",
    "no": "No",
    "noAccountSelected": "No account selected",
    "noActionsAdded": "No actions have been added. Add an action below.",
    "noActionsAdded_dao": "No actions have been added. If you want this proposal to do something upon execution, add an action below.",
    "noActiveCompensationCycle": "There is no active compensation cycle.",
    "noCompletedCyclesYet": "No completed cycles yet.",
    "noDaosFollowedYet": "You have not yet followed any DAOs.",
    "noDisplayName": "no display name",
    "noDisplayNameTooltip": "Set a display name on your profile page.",
    "noEditUntilProfileMerge": "Your wallet is attached to multiple profiles. You cannot edit your profile until they are merged. Click to merge them.",
    "noFeaturedDaosYet": "There are no featured DAOs yet.",
    "noFundsDuringInstantiation": "No funds will be transferred during instantiation.",
    "noGovernanceProposalsNeedDeposit": "There are no governance proposals that need deposits.",
    "noGovernanceProposalsOpenForVoting": "There are no governance proposals open for voting.",
    "noNftsBeingDisplayed": "No NFTs are being displayed.",
    "noNftsFound": "No NFTs found.",
    "noPayrollDescription": "Disable all payroll features and hide them from the DAO's home page.",
    "noPostsFound": "No posts found.",
    "noPriceData": "No price data.",
    "noProposalActions": "This proposal does not perform any actions.",
    "noProposalsFound": "No proposals found.",
    "noProposalsToVoteOnYet": "No proposals to vote on yet.",
    "noPushNotificationSubscriptions": "You do not have any push notification subscriptions.",
    "noQuorum": "No quorum",
    "noSubDaosYet": "No SubDAOs yet.",
    "noSubmission": "No submission",
    "noTarget": "no target",
    "noTokenSelected": "No token selected",
    "noVestingPaymentsFound": "No vesting payments found.",
    "noVetoableProposalsFound": "No vetoable proposals found.",
    "noVote": "No",
    "noWithVeto": "No with Veto",
    "nobleTariffApplied": "Noble applies a {{feePercent}} fee on {{tokenSymbol}} IBC transfers out of the chain, up to {{maxFee}} ${{tokenSymbol}}. This spend will cost {{fee}} ${{tokenSymbol}}, and the recipient will receive {{output}} ${{tokenSymbol}}.",
    "nominateContributorDescription": "If you know of a contributor who deserves to be compensated but who did not submit a contribution this cycle, you can nominate them below. Doing so will allow them to be rated by the DAO members along with the rest of the contributors.",
    "none": "None",
    "notAdmin": "Your DAO is not the admin of this contract. The proposal will not be executable while this is the case.",
    "notInstalledWalletsTooltip": "Wallets which do not seem to be installed.",
    "notMemberForProposal": "You were not a member of {{daoName}} when this proposal was created, so you cannot vote on it.",
    "notMet": "Not met",
    "nothingFound": "Nothing found.",
    "nothingHereYet": "Nothing here yet.",
    "notificationsInInbox_one": "There is {{count}} notification in your inbox.",
    "notificationsInInbox_other": "There are {{count}} notification in your inbox.",
    "numNftsSelected_one": "{{count}} NFT selected",
    "numNftsSelected_other": "{{count}} NFTs selected",
    "numNftsSelected_zero": "No NFT selected",
    "numPayments_one": "{{count}} payment",
    "numPayments_other": "{{count}} payments",
    "numProposals_one": "{{count}} proposal",
    "numProposals_other": "{{count}} proposals",
    "numSelected_one": "{{count}} selected",
    "numSelected_other": "{{count}} selected",
    "numSubmissions_one": "{{count}} submission",
    "numSubmissions_other": "{{count}} submissions",
    "onlyMembers": "Only members",
    "openMobileWalletAndAcceptConnection": "<0>Open your mobile wallet</0> and accept the connection request.",
    "openProfileSidebarTooltip": "Click to open profile sidebar.",
    "opensAtDate": "Opens at {{date}}",
    "optionInert": "This option will not perform any actions if it wins.",
    "orSelectWallet": "or select a wallet...",
    "otherNotifiersNotShown": "Notifiers setup by others are not shown.",
    "overruleSubDaoProposalDescription": "Overrule a proposal in a SubDAO.",
    "overwritingSave": "This save will overwrite the existing one with the same name.",
    "paid": "Paid",
    "parentDaoNotAdmin": "{{child}} is a SubDAO of {{parent}}, but its contract-level admin is set to itself, so {{child}} can migrate and modify its own code.",
    "passing": "Passing",
    "passingThresholdTooltip_noQuorum": "The proportion of all members who must vote 'Yes' on a single choice proposal for it to pass. Because quorum is disabled, this threshold is calculated from all members.",
    "passingThresholdTooltip_quorum": "The proportion of voters who must vote 'Yes' on a single choice proposal for it to pass. Because quorum is enabled, this threshold is calculated only from those who voted.",
    "pastGovPropQuorumHiddenExplanation_passed": "Quorum is hidden because the total voting power has changed since this proposal closed. The proposal passed, so the quorum must have been reached.",
    "pastGovPropQuorumHiddenExplanation_rejected": "Quorum is hidden because the total voting power has changed since this proposal closed.",
    "pauseRebalancerDescription": "Pause rebalancing.",
    "pauseRebalancerExplanation": "This action temporarily stops rebalancing.",
    "pending": "Pending",
    "pendingRewards": "Pending rewards",
    "percentVotingPower": "{{percent}} voting power",
    "percentagesRepresentVotingPower": "Percentages represent voting power.",
    "postedOnDate": "Posted on {{date}}",
    "preReleaseExplanation": "This is a pre-release version of DAO DAO running on the {{chain}} chain.",
    "pressDescriptionTooltip": "This description will be included with the post's NFT metadata and may show up in wallets or other places. Think of it as a brief description of the post.",
    "priceHistoryRange_day": "Every 5 minutes for the past day",
    "priceHistoryRange_hour": "Every 5 minutes for the past hour",
    "priceHistoryRange_month": "Every hour for the past month",
    "priceHistoryRange_week": "Every hour for the past week",
    "priceHistoryRange_year": "Every day for the past year",
    "productVersion": "DAO DAO v{{versionNumber}}",
    "proposalAllAbstainClarification": "When all voters abstain, a proposal will fail.",
    "proposalDepositTooltip": "The deposit required to create a proposal.",
    "proposalDepositWillBeRefunded": "Proposal deposit will be refunded once closed.",
    "proposalExecutionPolicyDescription": "Who is allowed to execute passed proposals?",
    "proposalFixesChildAdmin": "This proposal fixes that by setting the contract-level admin of {{child}} to {{parent}}.",
    "proposalModuleInfoCardsTooltip": "Different proposal types are configured separately. This is the configuration for the {{type}} proposal type.",
    "proposalModuleInfoCardsTooltip_approval": "Different proposal types are configured separately. This is the configuration for proposals that approve proposals in the DAO shown.",
    "proposalQuorumTooltip": "This proportion of voting power must vote on a proposal for it to pass.",
    "proposalStatus": {
      "canStillBeVetoed": "Although the vote is determined, it can still be vetoed. If the veto timelock period expires, then this proposal can be executed.",
      "completedAndOpen": "This proposal's outcome is determined. Votes may still be cast until expiration.",
      "completedAndOpen_vetoed": "This proposal was vetoed. Votes may still be cast until expiration, but it will never pass.",
      "depositPeriod": "This proposal is in the deposit period and will open for voting once the deposit is reached.",
      "govNotOpen": "This proposal is closed for voting with {{turnoutYesPercent}} of voters in favor.",
      "notOpenMultipleChoice": "This proposal is closed for voting with a turnout of {{turnoutPercent}}.",
      "notOpenMultipleChoice_closed": "This proposal is closed for voting with a turnout of {{turnoutPercent}}. It was rejected and closed.",
      "notOpenMultipleChoice_executed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. It was passed and executed.",
      "notOpenMultipleChoice_executionFailed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. It was passed but execution failed.",
      "notOpenMultipleChoice_overruleTimelock": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. It is now frozen until overruled or until the overrule period expires, after which it can be executed.",
      "notOpenMultipleChoice_overruled": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. However, it was overruled.",
      "notOpenMultipleChoice_passed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. It was passed and now needs to be executed.",
      "notOpenMultipleChoice_rejected": "This proposal is closed for voting with a turnout of {{turnoutPercent}}. It was rejected and now needs to be closed.",
      "notOpenMultipleChoice_vetoTimelock": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. It is now frozen until vetoed or until the veto period expires, after which it can be executed.",
      "notOpenMultipleChoice_vetoedNoWinner": "This proposal is closed for voting with a turnout of {{turnoutPercent}}. It was vetoed.",
      "notOpenMultipleChoice_vetoedWinner": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutWinningPercent}} of voters voting for {{turnoutWinner}}. However, it was vetoed.",
      "notOpenSingleChoice": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor.",
      "notOpenSingleChoice_closed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was rejected and closed.",
      "notOpenSingleChoice_executed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was passed and executed.",
      "notOpenSingleChoice_executionFailed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was passed but execution failed.",
      "notOpenSingleChoice_overruleTimelock": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It is now frozen until overruled or until the overrule period expires, after which it can be executed.",
      "notOpenSingleChoice_overruledNotPassed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was overruled.",
      "notOpenSingleChoice_overruledPassed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. However, it was overruled.",
      "notOpenSingleChoice_passed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was passed and now needs to be executed.",
      "notOpenSingleChoice_rejected": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was rejected and now needs to be closed.",
      "notOpenSingleChoice_vetoTimelock": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It is now frozen until vetoed or until the veto period expires, after which it can be executed.",
      "notOpenSingleChoice_vetoedNotPassed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. It was vetoed.",
      "notOpenSingleChoice_vetoedPassed": "This proposal is closed for voting with a turnout of {{turnoutPercent}} and {{turnoutYesPercent}} of voters in favor. However, it was vetoed.",
      "willFail": "If the current vote stands, this proposal will fail.",
      "willFailBadQuorum": "If the current vote stands, this proposal will fail due to a lack of voter participation.",
      "willFailBadThreshold": "If the current vote stands, this proposal will fail because insufficient 'Yes' votes have been cast.",
      "willFailTiedVote": "If the current vote stands, this proposal will fail because the votes are tied.",
      "willPass": "If the current vote stands, this proposal will pass.",
      "willPass_vetoEnabled": "If the current vote stands and this proposal is not vetoed, it will pass.",
      "willVeto": "If the current vote stands, this proposal will be vetoed."
    },
    "proposalThresholdTooltip": "A proposal must attain this proportion of 'Yes' votes to pass.",
    "proposeDeleteTooltip": "Propose deleting this post",
    "proposeUpdateTooltip": "Propose updates to this post",
    "publicSubmissionsDescription": "First, choose the time range during which submissions can be made, and add some guidelines for the submitters.",
    "pushNotificationsTooltip": "Receive inbox notifications on your mobile phone or browser.",
    "quorumTooltip_multiple": "The minimum amount of voting power that must vote on a proposal for it to be passable. When quorum is not met, even if a winner is chosen, the proposal will be rejected.",
    "quorumTooltip_single": "The minimum amount of voting power that must vote on a proposal for it to be passable. When quorum is not met, even if the passing threshold is met, the proposal will be rejected.",
    "ratingClosesAt": "Rating closes at {{date}}.",
    "reached": "Reached",
    "realVotingVaultDescription": "Deposit {{tokenSymbol}} to get voting power.",
    "rebalancerGraphTooltip": "The graph below shows the historical balances of the rebalanced tokens, which are displayed directly underneath the graph.",
    "rebalancerProjectionExplanation": "This projection displays the expected behavior of the system assuming prices remain constant. In reality, prices will fluctuate.",
    "recognizeSubDaoDescription": "{{name}} is a legitimate SubDAO. This adds it to the SubDAOs tab.",
    "redelegate": "Redelegate",
    "refund": "Refund",
    "register": "Register",
    "registerIcaDescription": "Registering an ICA (once it's created) shows it in the treasury and makes it usable in actions.",
    "registerSlashVestingExplanation": "<0>When a slash occurs against a validator with whom a vesting contract is currently staking or unstaking tokens, the slash needs to be registered with the vesting contract. For more information, see the Slashing section of the vesting contract's</0><1>security documentation</1><2>.</2>",
    "relayingCrossChainMessages": "Cross-chain messages are waiting to be relayed. Check back in a few minutes to ensure relaying is complete.",
    "remainingBalanceVesting": "Remaining balance vesting",
    "removeCw20FromTreasuryActionDescription": "Stop displaying the DAO's balance of a CW20 token in the treasury view.",
    "removeCw721FromTreasuryActionDescription": "Stop displaying the NFTs owned by the DAO from a CW721 NFT collection in the treasury view.",
    "required": "Required",
    "resumeRebalancerDescription": "Resume rebalancing.",
    "resumeRebalancerExplanation": "This action resumes rebalancing.",
    "retroactiveCompensationDescription": "After each contribution cycle, contributors are assigned points based on their contributions. Payment is split based on the points they receive.",
    "retroactiveDidNotSubmit": "You did not submit a contribution this cycle.",
    "reviewActionImportData": "Review the following actions to make sure they look right. If they do, click the Import button at the bottom to add them to the proposal.",
    "reviewYourProposal": "Review your proposal...",
    "reviewYourTransaction": "Review your transaction...",
    "revotingTooltip": "Whether or not members can change their vote on proposals before voting ends. When enabled, proposals will not be able to finish early.",
    "saveTransactionDescription": "Save this transaction so you can reuse it later. Using an existing name will overwrite the previous save.",
    "searchDaosPlaceholder": "Find a DAO...",
    "searchDraftPlaceholder": "Find a draft...",
    "searchForAccount": "Search for an account...",
    "searchForChain": "Search for a chain...",
    "searchForToken": "Search for a token...",
    "searchForWidget": "Search for a widget...",
    "searchMessages": "Search messages",
    "searchNftsPlaceholder": "Find an NFT...",
    "searchPlaceholder": "Search...",
    "searchProposalsPlaceholder": "Search proposals...",
    "searchValidatorsPlaceholder": "Find a validator...",
    "selectExistingProposalBelow": "Select an existing proposal below.",
    "selectPressChain": "Each post will be minted as an NFT on this chain and then deposited into the DAO's treasury.",
    "selfRelayDescription": "One or more messages in this proposal require self-relaying across chains since automatic relayers do not exist or are inactive right now.",
    "setUpApproverDescription": "Set up this DAO as an approver that is responsible for approving another DAO's proposals before they open for voting.",
    "setUpDiscordNotificationsTooltip": "Set up Discord notifications",
    "signedInAs": "Signed in as {{name}}",
    "socialLoginWarning": "Social logins may be less secure than a self-managed wallet. We recommend the self-managed wallets, above, if you plan on storing large amounts of money.",
    "socialLoginWarning_onlySocial": "Social logins may be less secure than a self-managed wallet. We recommend a self-managed wallet if you plan on storing large amounts of money.",
    "socialLoginsPoweredByWeb3Auth": "Social logins powered by web3auth",
    "spendActionCustomTokenDecimalsFound": "Automatic decimal conversion for ${{tokenSymbol}} with {{decimals}} decimals is enabled. Be sure to input the amount with {{decimals}} decimal places.",
    "spendActionDescription_dao": "Spend native or CW20 tokens from the treasury.",
    "spendActionDescription_gov": "Spend tokens from the community pool.",
    "spendActionDescription_wallet": "Spend native tokens from your wallet.",
    "stake": "Stake",
    "stakeActionDescription": "Manage native token staking.",
    "stakeYourTokensToJoin": "Stake your ${{tokenSymbol}} tokens to become a member of {{daoName}}.",
    "staked": "staked",
    "stakedNftsExplanation": "These have been staked by DAO members to earn voting power.",
    "stakes": "Stakes",
    "stakingAddress": "Staking Contract",
    "stargazeCreateCollectionFirst": "On Stargaze, you must first create the NFT Collection via a DAO proposal, and then you can mint NFTs.",
    "startedAt": "Started at",
    "startsAt": "Starts at",
    "startsIn": "Starts in",
    "statusPageDescription": "Check the status of DAO DAO's services.",
    "subDaoExplanation": "SubDAOs are children DAOs that help manage groups within your DAO.",
    "subDaoNotYetRecognized": "{{child}} has not yet been recognized by {{parent}} as a SubDAO. Be careful interacting with unrecognized SubDAOs as they could be malicious.",
    "subDaoRegistered": "{{child}} is a SubDAO of {{parent}}.",
    "subjectsCurrentlyCastVote": "{{subject}} currently cast vote",
    "subjectsCurrentlyCastVoteTooltip": "This is the vote that {{subject}} already cast. Casting another vote will replace this one.",
    "subjectsVote": "{{subject}} vote",
    "submissionsBeingRated": "Members of the DAO are rating submissions. After the rating period closes, the DAO will publish a proposal to distribute compensation according to their responses.",
    "submitGovernanceProposalDescription": "Submit a proposal to chain governance.",
    "submitUpgradeProposal": "Submit a proposal to upgrade the DAO?",
    "submitted": "Submitted",
    "supportedChainDaosNotShowingUpPrompt": "Are your DAOs not showing up? Add other DAO DAO-supported chains.",
    "supportedChainNftsNotShowingUpPrompt": "Click to find NFTs on other DAO DAO-supported chains",
    "supportedChainNftsNotShowingUpPromptTooltip": "You have not added all chains that DAO DAO supports to your profile. Add them to find more NFTs to use as your profile picture.",
    "supportsMarkdown": "Supports Markdown",
    "swapTokensOnWyndDescription": "Swap tokens on WYND DEX.",
    "target": "target",
    "testnet": "Testnet",
    "tierMemberGovTokenAllocationTooltip": "This member will receive {{tokens}} ${{tokenSymbol}} when the DAO is created.",
    "to": "to",
    "today": "today",
    "token": "token",
    "tokenBurned": "NFT with ID {{tokenId}} has been burned.",
    "tokenCreationNoTokenFactory": "Token creation is not supported by this chain because it does not have the token factory module.",
    "tokenCreationUnderDevelopment": "Token creation is under development and will be available soon.",
    "tokenDaoNotMemberInfo_dao": "You are not a member of {{daoName}}. To become a member, you must obtain and stake ${{tokenSymbol}}.",
    "tokenDaoNotMemberInfo_proposal": "You were not a member of {{daoName}} when this proposal was created, so you cannot vote on it. You will be able to vote on future proposals as long as you have ${{tokenSymbol}} staked at the time those proposals are created.",
    "tokenOnChain": "${{token}} on {{chain}}",
    "tokenStaked": "${{tokenSymbol}} staked",
    "tokenSwapDescription": "Create a new token swap that completes when both parties have paid their tokens or fund an existing one.",
    "tokenSwapExplanation": "To perform a token swap, one DAO must first create it, configuring the number of tokens each party must contribute. Then, both DAOs must add their funds. Once both DAOs have added their funds to the swap, the swap will be performed immediately.",
    "tokenSwapWarning": "DO NOT SEND TOKENS DIRECTLY TO THE CONTRACT—THEY WILL BE LOST. The counterparty must use the same Token Swap action to perform the swap.",
    "token_one": "token",
    "token_other": "tokens",
    "tokens": "tokens",
    "tokensWillBeSentToTreasury": "These tokens will be sent to the DAO's treasury.",
    "tokensWillBeSplitAmongContributors": "{{tokens}} will be split among contributors.",
    "tos": "DAO DAO TOOLING IS PROVIDED \"AS IS\", AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND. No developer or entity involved in creating the DAO DAO UI or smart contracts will be liable for any claims or damages whatsoever associated with your use, inability to use, or your interaction with other users of DAO DAO tooling, including any direct, indirect, incidental, special, exemplary, punitive or consequential damages, or loss of profits, cryptocurrencies, tokens, or anything else of value.",
    "totalHoldings": "Total holdings",
    "totalStakedTooltip": "The amount of ${{tokenSymbol}} currently staked with the DAO and thus earning voting power.",
    "totalSupplyTooltip": "The amount of ${{tokenSymbol}} in existence.",
    "transactionBuilderDescription": "Build transactions with the various actions to execute from your wallet.",
    "transferNftDescription_dao": "Transfer an NFT out of the DAO's treasury.",
    "transferNftDescription_gov": "Transfer an NFT from the Community Pool.",
    "transferNftDescription_wallet": "Transfer an NFT from your wallet.",
    "treasuryBalanceDescription": "{{numberOfTokensMinted, number}} tokens will be minted. {{memberPercent}} will be sent to members according to the distribution below. The remaining {{treasuryPercent}} will go to the DAO's treasury, where they can be distributed later via governance proposals.",
    "treasuryHistoryTooltip": "The graph below displays the historical value of the treasury across all chains.",
    "treasuryPercent": "Treasury percent",
    "treasuryValueTooltip": "This graph displays the historical value of the treasury across all chains, excluding staked balances.",
    "tryingAgain": "Trying again...",
    "txAbbr": "TX",
    "txSavesDescription": "Build and save transactions above that you may want to execute in the future. Choose one below to load it into the builder.",
    "unfollowTooltip": "Stop receiving updates about this DAO.",
    "unknown": "Unknown",
    "unpaid": "Unpaid",
    "unregisterIcaDescription": "Unregistering an ICA removes it from displaying in the treasury and being usable in actions.",
    "unstake": "Unstake",
    "unstakingDurationExplanation": "It takes {{duration}} to unstake tokens.",
    "unstakingDurationNoneExplanation": "Your tokens will unstake immediately.",
    "unstakingMechanics": "It will take {{humanReadableTime}} from when you unstake your tokens until you can withdrawn them. During that time, you will not receive voting power for the unstaking tokens, nor will you be able to cancel the unstaking process.",
    "unstakingPeriodTooltip": "The amount of time you must wait after unstaking ${{tokenSymbol}} before you can withdraw.",
    "unstakingPeriodTooltip_noToken": "The amount of time you must wait after unstaking before you can withdraw.",
    "unstakingStatus": {
      "claimed": "Claimed",
      "readyToClaim": "Ready to claim",
      "unstaking": "Unstaking"
    },
    "upToDate": "Up to date",
    "updateContractAdminActionDescription": "Update the CosmWasm level admin of a smart contract.",
    "updateInfoActionDescription": "Update your DAO's name, image, and description.",
    "updateMinterAllowanceDescription": "Allow an account to mint tokens, or remove the allowance.",
    "updateMinterAllowanceExplanation": "This action is needed to allow an account to mint tokens.",
    "updatePostDescription": "Update a post on the DAO's press.",
    "updateProposalSubmissionConfigActionDescription": "Update the proposal submission paramaters for your DAO.",
    "updateStakingConfigDescription": "Update the staking configuration of the DAO.",
    "updateVestingWidget": "There is an update available for the vesting widget. Click the button(s) above to prepare the update, and then publish the proposal.",
    "updateVotingConfigActionDescription": "Update the voting parameters for your DAO.",
    "updatedVestingWidget": "The vesting widget will be updated once this proposal is passed and executed.",
    "upgradeToV2Description": "Upgrade your DAO to the v2 smart contracts. This supports SubDAOs and other new features.",
    "upgradeToV2Explanation": "This upgrades your DAO's contracts to the latest audited version. Below you may register any SubDAOs that were created while this DAO was using v1. SubDAOs can use any version, but v2 is recommended.",
    "uploadSmartContractCodeActionDescription": "Upload smart contract code to the chain for future instantiation.",
    "useNativeCrossChainAccountInstead": "This chain is supported by DAO DAO's native cross-chain accounts. We recommend avoiding ICA when possible. Click the button below to switch to our native cross-chain account action.",
    "validatorActionsDescription": "Make transactions related to running a validator.",
    "vaultVotingPower": "Vault's voting power",
    "vaultVotingPowerTooltip": "The total voting power in the DAO derived from this voting vault.",
    "verificationPendingResend": "Verification pending. Click to resend email.",
    "verifyAddressMatches": "Verify that the following address matches the 'Send To' address in the widget below.",
    "verifyingGovernanceToken": "Verifying governance token...",
    "vestingCrossChainAccountCreationTooltip": "Before you can create the required vesting payment manager, you must first create a cross-chain account for the DAO on the target chain, because the DAO's account must be set as the owner of the vesting manager. You will need to pass a proposal creating the account before you can set up vesting on the target chain in a subsequent proposal.",
    "vestingIsCancellableByOther": "This vesting payment can be cancelled by the following address after it's created.",
    "vestingIsCancellableByOwner_dao": "This vesting payment can be cancelled by the DAO after it's created.",
    "vestingIsCancellableByOwner_wallet": "You will be able to cancel this vesting payment after it's created.",
    "vestingManagerExplanation_action": "To create vesting payments on a chain, the DAO must have an account and vesting payment manager on that chain. Create vesting payment managers on any of the available chains below, or create cross-chain accounts so you can set up managers in another proposal.",
    "vestingManagerExplanation_daoCreation": "To create vesting payments on a chain, the DAO must have an account and vesting payment manager on that chain. Since you are creating a DAO, you can only set up vesting on the DAO's home chain for now. Create cross-chain accounts via proposals once the DAO is created in order to manage vesting payments on other chains.",
    "vestingManagerNeeded": "To create a vesting payment on {{chain}}, the DAO must first setup a vesting payment manager by passing a proposal with the setup action. Click the button to add the setup action and remove this vesting payment.",
    "vestingNotCancellable": "This vesting payment cannot be cancelled later.",
    "vestingPaymentsDescription": "A vesting payment distributes funds according to any schedule you choose, and the DAO can enable or disable early cancelation.",
    "vestingPaymentsNeedSlashRegistration": "Vesting payments need slash registration",
    "vestingPaymentsRefreshSeconds": "Vesting payments refresh every {{seconds}} seconds.",
    "vetoActionDaoMemberExplanation_withEarlyExecute": "The buttons below will open the proposal creation page in the vetoer DAO, prefilled with the selected action. Nothing will happen until you submit, pass, and execute that proposal.",
    "vetoActionDaoMemberExplanation_withoutEarlyExecute": "The button below will open the proposal creation page in the vetoer DAO, prefilled with the veto action. Nothing will happen until you submit, pass, and execute that proposal.",
    "vetoDescription": "Give veto authority to another DAO, allowing them to veto proposals passed by this DAO. Ensure the veto timelock duration is longer than the vetoer's voting period so they have time to pass their veto proposals.",
    "vetoEarlyExecuteExplanation": "If you do not want to veto this proposal, you may execute it early instead, skipping the rest of the veto timelock period. Otherwise, the proposal will be executable once the veto timelock period expires.",
    "vetoOrEarlyExecuteDescription": "Veto a proposal in another DAO that you have veto power over or early-execute if you decide not to veto (if early-execute is enabled).",
    "vetoThresholdTooltip": "A proposal must attain this proportion of 'No with Veto' votes to be vetoed.",
    "vetoableProposalsTooltip": "Proposals in other DAOs that this DAO ({{daoName}}) has the power to veto.",
    "vetoed": "Vetoed",
    "vetoing": "Vetoing",
    "virtualVotingVaultTooltip": "Virtual voting vaults do not support bonding tokens manually, instead deriving voting power from other sources.",
    "voteOnGovernanceProposalDescription": "Vote on an open chain governance proposal, as an individual or as a validator.",
    "voteUntilExpirationExplanation": "Although the proposal outcome is determined, you may cast a vote until the proposal expires to be included in the final tally.",
    "votesPrivateOnSecretNetwork": "Votes are private on Secret Network.",
    "votesRefreshAutomatically": "Votes refresh automatically.",
    "votingDurationTooltip": "The maximum amount of time proposals are open for voting.",
    "votingDurationTooltip_noRevoting": "The maximum amount of time proposals are open for voting. Because you are not allowed to change your vote, proposals can finalize early if sufficient votes are cast to guarantee an outcome.",
    "votingDurationTooltip_revoting": "The amount of time proposals are open for voting. Because you are allowed to change your vote, a proposal will always stay open this long.",
    "votingEndBlockTooltip": "The block height at which voting ends.",
    "votingEndedBlockTooltip": "The block height at which voting ended.",
    "votingModuleAdapterCreationDiscord": "Want to help us support this voting module? Join the <2><0>DAO DAO Discord</0><1/></2> and post in #dao-help.",
    "votingModuleNotYetSupported": "This DAO uses a voting module that is not supported by our UI. Functionality is limited.",
    "votingPowerAtCreationTooltip": "This was your voting power at the time of proposal creation.",
    "votingVaultsExplanation": "Voting power in the DAO derives from multiple sources.",
    "waitingForRateAndPropose": "Waiting for DAO members to rate and propose...",
    "walletPageDescription": "View the tokens and NFTs for wallet {{address}}.",
    "whatAreYouLookingForPrompt": "What are you looking for?",
    "whatDoTheyWantToBeRated": "What do they want to be rated?",
    "whatDoYouWantToBeRated": "What do you want to be rated?",
    "widgetActive": "This widget is active.",
    "winningOptionTooltip": "This is the winning option.",
    "withdrawFromRebalancerDescription": "Withdraw funds from the rebalancer.",
    "withdrawStakingRewards": "Withdraw staking rewards",
    "withdrawTokenSwapDescription": "Withdraw funds from a token swap that has not yet completed.",
    "wouldYouLikeToSearchQuestion": "Would you like to search for a DAO?",
    "xOfYMultisig": "{{x}}-of-{{y}} multisig",
    "yes": "Yes",
    "yesVote": "Yes",
    "yesWillWinTieClarification": "'Yes' will win a tie vote.",
    "you": "you",
    "youAreMember": "You are a member",
    "your": "Your",
    "yourBalance": "Your balance",
    "yourDaosDescription": "Find the DAOs you follow or are a member of below.",
    "yourVaultVotingPower": "Your voting power",
    "yourVaultVotingPowerTooltip": "The voting power within this voting vault owned by you."
  },
  "meta": {
    "description": "Create a DAO to manage your community, protocol, or entire blockchain in just a few clicks. We support multisig, token-based, and NFT-based DAOs that can be as simple or complex as you want. Set up SubDAOs, manage interchain assets, and interact with dApps across the Cosmos."
  },
  "proposalModuleInfoCardsTitle": {
    "DaoProposalMultiple": "<0>Multiple choice proposals</0>",
    "DaoProposalSingle": "<0>Single choice proposals</0>",
    "DaoProposalSingle_approval": "<0>Approval proposals for</0><1/>"
  },
  "proposalModuleLabel": {
    "DaoProposalMultiple": "Multiple Choice",
    "DaoProposalSingle": "Single Choice",
    "DaoProposalSingle_approval": "Single Choice Approval"
  },
  "proposalStatusTitle": {
    "closed": "Closed",
    "executed": "Executed",
    "execution_failed": "Execution failed",
    "open": "Open",
    "passed": "Passed",
    "rejected": "Rejected",
    "veto_timelock": "Veto Timelock",
    "vetoed": "Vetoed"
  },
  "proposalStatusTitleShort": {
    "closed": "Closed",
    "executed": "Executed",
    "execution_failed": "Exec. fail",
    "open": "Open",
    "passed": "Passed",
    "rejected": "Rejected",
    "veto_timelock": "Veto Lock",
    "vetoed": "Vetoed"
  },
  "proposalVoteTitle": {
    "abstain": "Abstain",
    "approve": "Approve",
    "no": "No",
    "none": "None",
    "pending": "Pending",
    "reject": "Reject",
    "yes": "Yes"
  },
  "success": {
    "addedChainsToProfile": "Chains added to profile.",
    "addedToProfile": "Added to profile successfully.",
    "addedToken": "Added token to Keplr.",
    "claimedRewards": "Claimed rewards.",
    "compensationCycleCompleted_noProposal": "Compensation cycle completed.",
    "compensationCycleCompleted_withProposal": "Compensation cycle completed. Redirecting to proposal...",
    "compensationCycleCreated": "Compensation cycle created.",
    "contributionSubmitted": "Contribution submitted.",
    "created": "Created successfully.",
    "createdPermit": "Created permit.",
    "crossChainMessagesRelayed": "All cross-chain messages have been relayed.",
    "daoCreatedPleaseWait": "DAO created. You will be redirected once the DAO page is ready...",
    "deposited": "Deposited {{amount}} ${{tokenSymbol}}.",
    "depositedTokenIntoDao": "Deposited {{amount}} ${{tokenSymbol}} into the {{daoName}} treasury.",
    "discordNotifierEnabled": "Discord notifier setup successfully. Your notifier list will be updated shortly.",
    "discordNotifierRemoved": "Discord notifier removed. Your notifier list will be updated shortly.",
    "multisigImported": "Import successful. Review your new DAO's configuration, and make sure to set an image, name, and description.",
    "nftCollectionContractInstantiated": "NFT collection created successfully.",
    "nominationSubmitted": "Contributor nominated for this compensation cycle.",
    "proposalApproved": "Proposal approved and is now open for voting.",
    "proposalClosed": "Proposal closed.",
    "proposalCreatedCompleteCompensationCycle": "Proposal published. Complete the compensation cycle by saving the proposal ID in the next prompt.",
    "proposalExecuted": "Executed. Updating data and refreshing page...",
    "proposalOpenForVoting": "Proposal is open for voting.",
    "proposalOverruled": "Proposal overruled.",
    "proposalPassed": "Proposal passed.",
    "proposalPassedButExecutionFailed": "Proposal passed but execution failed.",
    "proposalRejected": "Proposal rejected.",
    "proposalSimulation": "Proposal simulated successfully. If executed right now, it would not fail.",
    "proposalVetoed": "Proposal vetoed.",
    "ratingsSubmitted": "Ratings submitted.",
    "registered": "Registered successfully.",
    "restaked": "Restaked successfully.",
    "saved": "Saved successfully.",
    "staked": "Staked successfully.",
    "tokenSwapContractInstantiated": "Token swap created successfully.",
    "transactionExecuted": "Transaction executed successfully.",
    "unregistered": "Unregistered successfully.",
    "unstaked": "Unstaked successfully.",
    "voteCast": "Vote successfully cast.",
    "withdrewPayment": "Withdrew payment."
  },
  "title": {
    "404": "404: Not Found",
    "500": "500: Error",
    "acceptSubDao": "Accept SubDAO Request",
    "accepted": "Accepted",
    "acceptingSubmissions": "Accepting submissions",
    "account": "Account",
    "actionLibrary": "Action Library",
    "actionNumber": "Action {{number}}",
    "actions": "Actions",
    "actions_one": "Action",
    "actions_other": "Actions",
    "active": "Active",
    "activeThreshold": "Active threshold",
    "addCw20ToTreasury": "Display Token Balance in Treasury",
    "addCw721ToTreasury": "Display NFT Collection in Treasury",
    "addToProfile": "Add to Profile",
    "advancedConfiguration": "Advanced configuration",
    "all": "All",
    "allNfts": "All NFTs",
    "approval": "Approval",
    "approved": "Approved",
    "approver": "Approver",
    "apps": "Apps",
    "authzAuthorization": "Authz Grant / Revoke",
    "authzExec": "Authz Exec",
    "available": "Available",
    "averages": "Averages",
    "balance": "Balance",
    "balances": "Balances",
    "becomeSubDao": "Become SubDAO",
    "beforeYouEnter": "Before you enter",
    "beginVesting": "Begin vesting",
    "blockCompleted": "Block completed",
    "browserWallets": "Browser wallets",
    "bulkImportActions": "Bulk Import Actions",
    "burnNft": "Burn NFT",
    "cancelVesting": "Cancel vesting",
    "canceled": "Canceled",
    "casting": "Casting",
    "chain": "Chain",
    "chainGovernance": "Chain governance",
    "chainModule": {
      "gov": "Governance Module"
    },
    "chains": "Chains",
    "choices": "Choices",
    "chooseAnAction": "Choose an action...",
    "chooseProfilePicture": "Choose Profile Picture",
    "chooseTokenAmount": "Choose token amount",
    "claimRewards": "Claim Rewards",
    "claimTokens": "Claim Tokens",
    "claimableTokens": "Claimable ${{tokenSymbol}}",
    "claimed": "Claimed",
    "claimedBalance": "Claimed balance",
    "collection": "Collection",
    "collectionInfo": "Collection info",
    "commission": "Commission",
    "communityPool": "Community Pool",
    "communityPoolDeposit": "Community Pool Deposit",
    "compensation": "Compensation",
    "completed": "Completed",
    "completedCompensationCycles": "Completed compensation cycles",
    "config": "Config",
    "configuration": "Configuration",
    "configureRebalancer": "Configure Rebalancer",
    "configureVestingPayments": "Configure Vesting Payments",
    "configureWalletToContinue": "Configure your wallet to continue",
    "congratsOnDao": "Congrats on your DAO!",
    "congratsOnProposal": "Congrats, {{name}} is out!",
    "congratsOnSubDao": "Congrats on your SubDAO!",
    "connectingToWallet": "Connecting to {{wallet}}...",
    "content": "Content",
    "contributions": "Contributions",
    "contributor": "Contributor",
    "createADAO": "Create a DAO",
    "createAProposal": "Create a proposal",
    "createASubDao": "Create a SubDAO",
    "createCrossChainAccount": "Create Cross-Chain Account",
    "createDao": "Create DAO",
    "createIca": "Create ICA",
    "createNftCollection": "Create NFT Collection",
    "createPost": "Create Post",
    "createProposal": "Create proposal",
    "createValenceAccount": "Create Rebalancer Account",
    "createValidator": "Create a validator",
    "created": "Created",
    "createdAccount": "Created account",
    "creationPolicy": "Creation policy",
    "creator": "Creator",
    "crossChainExecute": "Cross-Chain Execute",
    "currentWinner": "Current Winner",
    "custom": "Custom",
    "customValidatorAddress": "Custom Validator Address",
    "dao": "DAO",
    "daoAdminExec": "DAO Admin Execute",
    "daoCreationProcess": "DAO Creation Process",
    "daoDaoCommunityStatistics": "DAO DAO Community Statistics",
    "daoNotFound": "DAO Not Found",
    "daoRatings": "DAO Ratings",
    "daos": "DAOs",
    "daosAddresses": "DAO's addresses",
    "daosGoverned": "DAOs governed",
    "date": "Date",
    "delegated": "Delegated",
    "deletePost": "Delete Post",
    "denied": "Denied",
    "deposit": "Deposit",
    "depositFiat": "Deposit fiat",
    "depositNfts": "Import NFTs",
    "depositPeriod": "Deposit period",
    "depositRefunds": "Deposit refunds",
    "depositToGovernanceProposal": "Deposit to Governance Proposal",
    "depositToken": "Deposit ${{tokenSymbol}}",
    "deposited": "Deposited",
    "deposits": "Deposits",
    "description": "Description",
    "details": "Details",
    "discord": "Discord",
    "discordNotifier": "Discord Notifier",
    "distribution": "Distribution",
    "documentation": "Documentation",
    "editValidator": "Edit validator",
    "email": "Email",
    "enableMultipleChoiceProposals": "Enable Multiple Choice Proposals",
    "enableRetroactiveCompensation": "Enable Retroactive Compensation",
    "enableVestingPayments": "Enable Vesting Payments",
    "end": "End",
    "errored": "Errored",
    "estUsdValue": "Est. USD value",
    "established": "Established",
    "executeSmartContract": "Execute Smart Contract",
    "existingProposal": "Existing proposal",
    "existingToken": "Existing token",
    "expires": "Expires",
    "extension": "Extension",
    "extensions": "Extensions",
    "factoryToken": "Factory token",
    "featuredDaos": "Featured DAOs",
    "feeShare": "Fee share",
    "feed": "Feed",
    "fees": "Fees",
    "fiatOnOffRamp": "Fiat on/off ramp",
    "filter": "Filter",
    "finished": "Finished",
    "fixChildAdmin": "Fix {{child}} admin",
    "following": "Following",
    "fundAndExecute": "Fund and execute",
    "fundRebalancer": "Fund Rebalancer",
    "github": "GitHub",
    "governance": "Governance",
    "governanceConfiguration": "Governance configuration",
    "governanceDaos": "Governance DAOs",
    "governanceToken": "Governance Token",
    "header": "Header",
    "hidden": "Hidden",
    "highestOffer": "Highest offer",
    "history": "History",
    "holdings": "Holdings",
    "home": "Home",
    "ibcTransferPath": "IBC Transfer Path",
    "icaExecute": "ICA Execute",
    "identity": "Identity",
    "importFrom": "Import from...",
    "importMultisig": "Import Multisig",
    "inactiveDaos": "Inactive DAOs",
    "initialTokenDistribution": "Initial Token Distribution",
    "instantiatePredictableSmartContract": "Instantiate Predictable Smart Contract",
    "instantiateSmartContract": "Instantiate Smart Contract",
    "lastUpdated": "Last updated",
    "ledger": "Ledger",
    "loadingSubDaos": "Loading SubDAOs...",
    "logInWith": "Log in with...",
    "loggedIn": "Logged in",
    "loggedOut": "Logged out",
    "loggingInToService": "Logging in to {{service}}...",
    "manage": "Manage",
    "manageIcas": "Manage ICAs",
    "manageMembers": "Manage Members",
    "managePayroll": "Manage Payroll",
    "manageStaking": "Manage Staking",
    "manageStorageItems": "Manage Storage Items",
    "manageSubDaoPause": "Manage SubDAO Pause",
    "manageSubDaos": "Manage SubDAOs",
    "manageTreasuryNfts": "Manage Treasury NFTs",
    "manageTreasuryTokens": "Manage Treasury Tokens",
    "manageVesting": "Manage Vesting",
    "manageVetoableDaos": "Manage Vetoable DAOs",
    "manageWidgets": "Manage Widgets",
    "maxSlippage": "Maximum slippage",
    "memberOfDao": "Member of {{daoName}}",
    "members": "Members",
    "membership": "Membership",
    "mergeProfiles": "Merge Profiles",
    "metadata": "Metadata",
    "migrateFollowing": "Migrate Followed DAOs",
    "migrateSmartContract": "Migrate Smart Contract",
    "migrateTokenFactoryModule": "Migrate Token Factory Module",
    "minimumOutputRequired": "Minimum output required",
    "mint": "Mint",
    "mintNft": "Mint NFT",
    "mobileWallets": "Mobile wallets",
    "multiple": "Multiple",
    "nativeBalanceOverTime": "{{denomLabel}} balance over time",
    "navigation": "Navigation",
    "needWalletToContinue": "You'll need a wallet to continue",
    "needsApproval": "Needs approval",
    "newCompensationCycle": "New Compensation Cycle",
    "newDao": "New DAO",
    "newMember": "New member",
    "newProposal": "New proposal",
    "newProposalTo": "New proposal to...",
    "newSubDao": "New SubDAO",
    "nftCollection": "NFT Collection",
    "nfts": "NFTs",
    "noHistory": "No history",
    "noProposal": "No proposal",
    "noWinner": "No winner",
    "nominateContributor": "Nominate Contributor",
    "nonRebalancedTokens": "Non-rebalanced tokens",
    "noneOfTheAbove": "None of the above",
    "notAMember": "Not a Member",
    "notInstalled": "Not installed",
    "notificationSettings": "Notification settings",
    "notifications": "Notifications",
    "notificationsWithCount": "Notifications ({{count}})",
    "now": "Now",
    "numMembers_one": "{{count}} member",
    "numMembers_other": "{{count}} members",
    "numNfts_one": "{{count}} NFT",
    "numNfts_other": "{{count}} NFTs",
    "numNotifications_one": "{{count}} notification",
    "numNotifications_other": "{{count}} notifications",
    "numPending": "{{count}} pending",
    "numPendingItems_one": "{{count}} pending item",
    "numPendingItems_other": "{{count}} pending items",
    "numSubDaos_one": "{{count}} SubDAO",
    "numSubDaos_other": "{{count}} SubDAOs",
    "openProposals": "Open proposals",
    "orChooseAStructure": "...or choose a structure",
    "other": "Other",
    "otherMembers": "Other Members",
    "overrule": "Overrule",
    "overruleSubDaoProposal": "Overrule SubDAO Proposal",
    "owner": "Owner",
    "pages": "Pages",
    "passingThreshold": "Passing threshold",
    "pauseRebalancer": "Pause Rebalancer",
    "payout": "Payout",
    "payroll": "Payroll",
    "pending": "Pending",
    "percentTurnout": "{{value}} turnout",
    "posts": "Posts",
    "preferences": "Preferences",
    "preview": "Preview",
    "profile": "Profile",
    "projectedCompensation": "Projected compensation",
    "proposal": "Proposal",
    "proposalAllAbstain": "All abstain clarification",
    "proposalCreationInfo": "Proposal creation info",
    "proposalExecutionPolicy": "Proposal execution policy",
    "proposalId": "Proposal {{id}}",
    "proposalNotFound": "Proposal Not Found",
    "proposalTieClarification": "Tie clarification",
    "proposalType": "Proposal type",
    "proposals": "Proposals",
    "proposalsCreated": "Proposals created",
    "proposals_one": "Proposal",
    "proposals_other": "Proposals",
    "propose": "Propose",
    "proposed": "Proposed",
    "proposer": "Proposer",
    "publicSubmissions": "Public Submissions",
    "push": "Push",
    "pushNotifications": "Push Notifications",
    "quorum": "Quorum",
    "rate": "Rate",
    "ratioOfVotes": "Ratio of votes",
    "rawData": "Raw data",
    "rebalancer": "Rebalancer",
    "recentProposals": "Recent proposals",
    "recipient": "Recipient",
    "recognizeSubDao": "Recognize {{name}} as a SubDAO",
    "redelegate": "Redelegate",
    "refund": "Refund",
    "registerSlash": "Register slash",
    "relay": "Relay",
    "relayed": "Relayed",
    "removeCw20FromTreasury": "Remove Token Balance from Treasury",
    "removeCw721FromTreasury": "Remove NFT Collection from Treasury",
    "removeItem": "Remove Item",
    "requestedRating": "Requested rating",
    "resetting": "Resetting...",
    "restake": "Restake",
    "results": "Results",
    "resumeRebalancer": "Resume Rebalancer",
    "retroactive": "Retroactive",
    "retroactiveCompensation": "Retroactive compensation",
    "reviewTransaction": "Review Transaction",
    "revoting": "Revoting",
    "saveTransaction": "Save transaction",
    "saved": "Saved",
    "scanQrCode": "Scan QR Code",
    "search": "Search",
    "selectNftToBurn": "Select NFT To Burn",
    "selectNftToTransfer": "Select NFT To Transfer",
    "send": "Send",
    "setAdminToParent": "Set admin to {{parent}}",
    "setItem": "Set Item",
    "setUpApprover": "Set Up Approver",
    "setWithdrawAddress": "Set Withdraw Address",
    "signingAs": "Signing as",
    "slashAmountToRegister": "Slash amount to register",
    "sortBy": "Sort by",
    "spend": "Spend",
    "stake": "Stake",
    "staked": "Staked",
    "stakedNfts": "Staked NFTs",
    "stakedTo": "Staked to...",
    "staker": "Staker",
    "stakingModeNfts": {
      "claim": "Claim NFTs",
      "stake": "Stake NFTs",
      "stakeHeaderSubtitle": "Select the NFTs you want to stake from the NFT collection.",
      "unstake": "Unstake NFTs",
      "unstakeHeaderSubtitle": "Select the NFTs you want to unstake from the NFT collection."
    },
    "stargazeNames": "Stargaze Names",
    "start": "Start",
    "status": "Status",
    "subDao": "SubDAO",
    "subDaos": "SubDAOs",
    "submitGovernanceProposal": "Submit Governance Proposal",
    "success": "Success",
    "suggestions": "Suggestions",
    "summary": "Summary",
    "supplies": "Supplies",
    "swapTokensOnWynd": "Swap Tokens on WYND",
    "target": "Target",
    "threshold": "Threshold",
    "tied": "Tied",
    "tierNum": "Tier {{tier}}",
    "timeLeft": "Time left",
    "timeRemaining": "Time remaining",
    "timedOut": "Timed out",
    "title": "Title",
    "token": "Token",
    "tokenSwap": "Token Swap",
    "tokens": "Tokens",
    "topAbsolute": "Top {{count}}",
    "topPercent": "Top {{percent}}%",
    "topStakers": "Top Stakers",
    "total": "Total",
    "totalStaked": "Total staked",
    "totalSupply": "Total supply",
    "totalValue": "Total Value",
    "totalVested": "Total vested",
    "transaction": "Transaction",
    "transactionBuilder": "Transaction Builder",
    "transfer": "Transfer",
    "transferNft": "Transfer NFT",
    "treasury": "Treasury",
    "treasuryHistory": "Treasury History",
    "treasuryValue": "Treasury Value",
    "turnout": "Turnout",
    "tvl": "TVL",
    "twitter": "Twitter",
    "type": "Type",
    "undelegate": "Undelegate",
    "underDevelopment": "Under development",
    "uniqueVoters": "Unique voters",
    "unjailValidator": "Unjail validator",
    "unregisteredSlashAmount": "Unregistered slash amount",
    "unstake": "Unstake",
    "unstakedNfts": "Unstaked NFTs",
    "unstaking": "Unstaking",
    "unstakingPeriod": "Unstaking period",
    "unstakingTokens": "Unstaking tokens",
    "unsupported": "Unsupported",
    "upcoming": "Upcoming",
    "updateContractAdmin": "Update Contract Admin",
    "updateInfo": "Update Info",
    "updateMinterAllowance": "Update Minter Allowance",
    "updatePost": "Update Post",
    "updateStakingConfig": "Update Staking Config",
    "upgradeToV2": "Upgrade to V2",
    "uploadSmartContractCode": "Upload Smart Contract Code",
    "validatorActions": "Validator Actions",
    "value": "Value",
    "verified": "Verified",
    "verifyEmail": "Verify Email",
    "vestedOfTotalPayment": "Vested / Total Payment",
    "vesting": "Vesting",
    "vestingCurve": "Vesting Curve",
    "vestingPayments": "Vesting Payments",
    "veto": "Veto",
    "vetoOrEarlyExecute": "Veto or Early-Execute",
    "vetoThreshold": "Veto threshold",
    "vetoTimeLeft": "Veto time left",
    "vetoable": "Vetoable",
    "vetoer": "Vetoer",
    "vetoers_one": "Vetoer",
    "vetoers_other": "Vetoers",
    "virtual": "Virtual",
    "visibility": "Visibility",
    "vote": "Vote",
    "voteOnGovernanceProposal": "Vote on Governance Proposal",
    "voteOptions": "Vote options",
    "voter": "Voter",
    "votesCast": "Votes cast",
    "votingClosed": "Voting closed",
    "votingConfiguration": "Voting configuration",
    "votingEnd": "Voting end",
    "votingEndBlock": "Voting end block",
    "votingOpened": "Voting opened",
    "votingPower": "Voting power",
    "votingProgress": "Voting Progress",
    "votingTimeLeft": "Voting time left",
    "votingVaults": "Voting Vaults",
    "votingWeight": "Voting weight",
    "wallet": "Wallet",
    "walletConnect": "WalletConnect",
    "watchOut": "Watch out!",
    "website": "Website",
    "when": "When",
    "whoControlsDaoQuestion": "Who controls this DAO?",
    "widgets": "Widgets",
    "winner": "Winner",
    "winningChoice": "Winning choice",
    "withdrawFromRebalancer": "Withdraw from Rebalancer",
    "withdrawTokenSwap": "Withdraw Token Swap",
    "withdrawValidatorCommission": "Claim validator commission",
    "yourDaos": "Your DAOs",
    "yourNotifiers": "Your notifiers",
    "yourSubmission": "Your submission"
  },
  "unit": {
    "blocks_one": "Block",
    "blocks_other": "Blocks",
    "days_one": "Day",
    "days_other": "Days",
    "hours_one": "Hour",
    "hours_other": "Hours",
    "minutes_one": "Minute",
    "minutes_other": "Minutes",
    "months_one": "Month",
    "months_other": "Months",
    "seconds_one": "Second",
    "seconds_other": "Seconds",
    "weeks_one": "Week",
    "weeks_other": "Weeks",
    "years_one": "Year",
    "years_other": "Years"
  },
  "widgetDescription": {
    "mint_nft": "Display an NFT collection with a button to mint new NFTs.",
    "press": "Publish posts to your DAO's press page.",
    "retroactive": "Reward contributors for work they've already done. Vote on how to distribute payments in regular cycles.",
    "vesting": "Vest funds to contributors at a constant rate, similar to a salary."
  },
  "widgetTitle": {
    "mint_nft": "Mint NFT",
    "press": "Press",
    "retroactive": "Retroactive Compensation",
    "vesting": "Vesting Payments"
  }
}
